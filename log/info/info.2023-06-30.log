2023-06-30 13:54:40.384 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on qinzhiyingdeMacBook-Pro.local with PID 48886 (/Users/windqzy/IdeaProjects/FEBS-Vue/backend/target/classes started by windqzy in /Users/windqzy/IdeaProjects/FEBS-Vue)
2023-06-30 13:54:40.385 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2023-06-30 13:54:40.990 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-30 13:54:40.991 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-30 13:54:41.019 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19ms. Found 0 repository interfaces.
2023-06-30 13:54:41.200 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$55da6a08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.272 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.321 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$3029b5ac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.327 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.328 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.334 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c69b44db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.345 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$321b4684] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.438 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$2adffdd8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.451 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.454 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.488 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.492 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$1822a0ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.495 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.501 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$463b175] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.507 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.508 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.510 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - dynamic-datasource detect P6SPY plugin and enabled it
2023-06-30 13:54:41.516 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2023-06-30 13:54:41.724 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2023-06-30 13:54:41.724 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - dynamic-datasource - load a datasource named [primary] success
2023-06-30 13:54:41.724 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - dynamic-datasource initial loaded [1] datasource,primary datasource named [primary]
2023-06-30 13:54:41.724 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.730 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.736 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.942 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.947 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.949 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.951 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.965 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.966 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy113] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.970 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.971 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:41.972 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.005 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.024 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.045 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.046 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.048 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.068 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.069 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.085 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.086 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.088 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.105 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.123 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$222ec46c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.126 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$d47b8685] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.127 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$8f926c74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.131 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.133 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.136 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$b65de3a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.139 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.140 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$43a61fb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.148 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.149 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.153 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.156 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.168 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.178 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.181 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.181 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.188 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.199 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 13:54:42.386 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2023-06-30 13:54:42.394 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2023-06-30 13:54:42.400 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-30 13:54:42.400 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.22]
2023-06-30 13:54:42.459 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-30 13:54:42.459 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2031 ms
2023-06-30 13:54:42.948 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2023-06-30 13:54:42.953 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2023-06-30 13:54:42.953 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.1 created.
2023-06-30 13:54:42.954 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2023-06-30 13:54:42.954 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2023-06-30 13:54:42.954 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2023-06-30 13:54:42.954 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.1
2023-06-30 13:54:42.954 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@79f1e22e
2023-06-30 13:54:43.009 febs [main] INFO  p6spy - 2023-06-30 13:54:43 | 耗时 3 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2023-06-30 13:54:43.680 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-30 13:54:43.777 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2023-06-30 13:54:43.797 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2023-06-30 13:54:44.468 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2023-06-30 13:54:44.541 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2023-06-30 13:54:44.553 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-30 13:54:44.575 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2023-06-30 13:54:44.651 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_1
2023-06-30 13:54:44.658 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_2
2023-06-30 13:54:44.666 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_3
2023-06-30 13:54:44.670 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_4
2023-06-30 13:54:44.680 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_5
2023-06-30 13:54:44.702 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_6
2023-06-30 13:54:44.711 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_7
2023-06-30 13:54:44.724 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_8
2023-06-30 13:54:44.738 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2023-06-30 13:54:44.739 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2023-06-30 13:54:44.748 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2023-06-30 13:54:44.757 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-06-30 13:54:44.764 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2023-06-30 13:54:44.765 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 4.63 seconds (JVM running for 4.989)
2023-06-30 13:54:44.770 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2023-06-30 13:54:44.771 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2023-06-30 13:54:44.771 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2023-06-30 13:54:44.795 febs [main] INFO  p6spy - 2023-06-30 13:54:44 | 耗时 3 ms | SQL 语句：
SELECT USER_ID,description,password,modify_time,email,ssex,mobile,dept_id,avatar,last_login_time,create_time,status,username FROM t_user;
2023-06-30 13:54:44.800 febs [main] INFO  p6spy - 2023-06-30 13:54:44 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 13:54:44.831 febs [main] INFO  p6spy - 2023-06-30 13:54:44 | 耗时 3 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2023-06-30 13:54:44.843 febs [main] INFO  p6spy - 2023-06-30 13:54:44 | 耗时 3 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2023-06-30 13:54:44.856 febs [main] INFO  p6spy - 2023-06-30 13:54:44 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,layout,color,multi_page,fix_siderbar,fix_header,theme FROM t_user_config WHERE USER_ID='1' ;
2023-06-30 13:54:44.862 febs [main] INFO  p6spy - 2023-06-30 13:54:44 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 13:54:44.866 febs [main] INFO  p6spy - 2023-06-30 13:54:44 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2023-06-30 13:54:44.871 febs [main] INFO  p6spy - 2023-06-30 13:54:44 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2023-06-30 13:54:44.876 febs [main] INFO  p6spy - 2023-06-30 13:54:44 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,layout,color,multi_page,fix_siderbar,fix_header,theme FROM t_user_config WHERE USER_ID='2' ;
2023-06-30 13:54:44.880 febs [main] INFO  p6spy - 2023-06-30 13:54:44 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 13:54:44.884 febs [main] INFO  p6spy - 2023-06-30 13:54:44 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2023-06-30 13:54:44.889 febs [main] INFO  p6spy - 2023-06-30 13:54:44 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2023-06-30 13:54:44.893 febs [main] INFO  p6spy - 2023-06-30 13:54:44 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,layout,color,multi_page,fix_siderbar,fix_header,theme FROM t_user_config WHERE USER_ID='12' ;
2023-06-30 13:54:44.898 febs [main] INFO  p6spy - 2023-06-30 13:54:44 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'windqzy' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 13:54:44.903 febs [main] INFO  p6spy - 2023-06-30 13:54:44 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy';
2023-06-30 13:54:44.908 febs [main] INFO  p6spy - 2023-06-30 13:54:44 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'windqzy' and m.perms is not null and m.perms <> '';
2023-06-30 13:54:44.912 febs [main] INFO  p6spy - 2023-06-30 13:54:44 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,layout,color,multi_page,fix_siderbar,fix_header,theme FROM t_user_config WHERE USER_ID='13' ;
2023-06-30 13:54:44.915 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2023-06-30 13:54:44.915 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2023-06-30 13:54:44.915 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2023-06-30 13:54:44.915 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2023-06-30 13:54:44.915 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2023-06-30T13:54:44.915
2023-06-30 13:54:45.140 febs [RMI TCP Connection(5)-192.168.1.123] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-30 13:54:45.140 febs [RMI TCP Connection(5)-192.168.1.123] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-30 13:54:45.142 febs [RMI TCP Connection(4)-192.168.1.123] INFO  p6spy - 2023-06-30 13:54:45 | 耗时 1 ms | SQL 语句：
select 1;
2023-06-30 13:54:45.148 febs [RMI TCP Connection(5)-192.168.1.123] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2023-06-30 13:55:44.745 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-06-30 13:55:44.804 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 13:55:44 | 耗时 3 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-06-30T13:55:44.791+0800' WHERE (username = 'windqzy');
2023-06-30 13:55:44.807 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 13:55:44 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'windqzy' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 13:55:44.815 febs [http-nio-9527-exec-2] INFO  p6spy - 
2023-06-30 13:55:44.829 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 13:55:44 | 耗时 3 ms | SQL 语句：
INSERT INTO t_login_log ( login_time, ip, location, username ) VALUES ( '2023-06-30T13:55:44.820+0800', '127.0.0.1', '', 'windqzy' );
2023-06-30 13:55:44.833 febs [http-nio-9527-exec-2] INFO  p6spy - 
2023-06-30 13:55:44.897 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 13:55:44.922 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 13:55:44 | 耗时 4 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy') order by m.order_num;
2023-06-30 13:55:45.081 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 13:55:45.088 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 13:55:45 | 耗时 4 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 13:55:45.092 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 13:55:45 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 13:55:45.094 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 13:55:45 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 13:55:45.097 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 13:55:45 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 13:55:45.099 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 13:55:45 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 14:04:04.377 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 14:04:04.386 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 14:04:04 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 14:04:04.389 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 14:04:04 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 14:04:04.392 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 14:04:04 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 14:04:04.395 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 14:04:04 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 14:04:04.399 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 14:04:04 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 14:04:21.700 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 14:04:21.705 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 14:04:21 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 14:04:21.707 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 14:04:21 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 14:04:21.709 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 14:04:21 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 14:04:21.711 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 14:04:21 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 14:04:21.714 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 14:04:21 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 14:04:41.152 febs [http-nio-9527-exec-5] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-06-30 14:04:41.182 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 14:04:41 | 耗时 8 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-06-30T14:04:41.163+0800' WHERE (username = 'windqzy');
2023-06-30 14:04:41.189 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 14:04:41 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'windqzy' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 14:04:41.202 febs [http-nio-9527-exec-5] INFO  p6spy - 
2023-06-30 14:04:41.213 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 14:04:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( login_time, ip, location, username ) VALUES ( '2023-06-30T14:04:41.206+0800', '127.0.0.1', '', 'windqzy' );
2023-06-30 14:04:41.216 febs [http-nio-9527-exec-5] INFO  p6spy - 
2023-06-30 14:04:41.243 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 14:04:41.247 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 14:04:41 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy') order by m.order_num;
2023-06-30 14:04:41.343 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 14:04:41.349 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 14:04:41 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 14:04:41.352 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 14:04:41 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 14:04:41.355 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 14:04:41 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 14:04:41.358 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 14:04:41 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 14:04:41.363 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 14:04:41 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 14:05:19.555 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 14:05:19.563 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 14:05:19 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 14:05:19.566 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 14:05:19 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 14:05:19.569 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 14:05:19 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 14:05:19.574 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 14:05:19 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 14:05:19.577 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 14:05:19 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 14:05:30.553 febs [http-nio-9527-exec-5] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-06-30 14:05:30.574 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 14:05:30 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-06-30T14:05:30.564+0800' WHERE (username = 'windqzy');
2023-06-30 14:05:30.577 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 14:05:30 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'windqzy' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 14:05:30.585 febs [http-nio-9527-exec-5] INFO  p6spy - 
2023-06-30 14:05:30.595 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 14:05:30 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( login_time, ip, location, username ) VALUES ( '2023-06-30T14:05:30.589+0800', '127.0.0.1', '', 'windqzy' );
2023-06-30 14:05:30.599 febs [http-nio-9527-exec-5] INFO  p6spy - 
2023-06-30 14:05:30.627 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 14:05:30.634 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 14:05:30 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy') order by m.order_num;
2023-06-30 14:05:30.726 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 14:05:30.732 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 14:05:30 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 14:05:30.735 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 14:05:30 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 14:05:30.738 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 14:05:30 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 14:05:30.741 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 14:05:30 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 14:05:30.744 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 14:05:30 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 14:06:23.267 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 14:06:23.274 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 14:06:23 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 14:06:23.277 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 14:06:23 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 14:06:23.279 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 14:06:23 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 14:06:23.281 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 14:06:23 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 14:06:23.282 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 14:06:23 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 14:07:11.105 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 14:07:11.114 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 14:07:11 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 14:07:11.117 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 14:07:11 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 14:07:11.121 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 14:07:11 | 耗时 2 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 14:07:11.123 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 14:07:11 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 14:07:11.127 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 14:07:11 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 14:07:52.754 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 14:07:52.759 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 14:07:52 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 14:07:52.762 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 14:07:52 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 14:07:52.763 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 14:07:52 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 14:07:52.765 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 14:07:52 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 14:07:52.767 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 14:07:52 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 14:07:58.803 febs [Thread-11] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2023-06-30 14:07:58.804 febs [Thread-11] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2023-06-30 14:07:58.809 febs [Thread-11] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2023-06-30 14:07:58.810 febs [Thread-11] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2023-06-30 14:07:58.810 febs [Thread-11] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2023-06-30 14:07:58.810 febs [Thread-11] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2023-06-30 14:07:58.810 febs [Thread-11] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2023-06-30 14:07:58.813 febs [Thread-11] INFO  c.b.d.d.DynamicRoutingDataSource - dynamic-datasource start closing ....
2023-06-30 14:07:58.813 febs [Thread-11] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2023-06-30 14:07:58.815 febs [Thread-11] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2023-06-30 14:07:58.816 febs [Thread-11] INFO  c.b.d.d.DynamicRoutingDataSource - dynamic-datasource all closed success,bye
2023-06-30 14:09:13.007 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on qinzhiyingdeMacBook-Pro.local with PID 50899 (/Users/windqzy/IdeaProjects/FEBS-Vue/backend/target/classes started by windqzy in /Users/windqzy/IdeaProjects/FEBS-Vue)
2023-06-30 14:09:13.009 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2023-06-30 14:09:13.541 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-30 14:09:13.543 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-30 14:09:13.565 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16ms. Found 0 repository interfaces.
2023-06-30 14:09:13.731 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$2822eb78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:13.799 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:13.847 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$272371c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:13.852 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:13.854 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:13.858 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$98e3c64b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:13.868 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$463c7f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:13.956 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$fd287f48] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:13.968 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:13.970 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:13.998 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.002 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$ea6b225a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.004 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.011 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$d6ac32e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.016 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.017 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.019 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - dynamic-datasource detect P6SPY plugin and enabled it
2023-06-30 14:09:14.023 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2023-06-30 14:09:14.198 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2023-06-30 14:09:14.198 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - dynamic-datasource - load a datasource named [primary] success
2023-06-30 14:09:14.198 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - dynamic-datasource initial loaded [1] datasource,primary datasource named [primary]
2023-06-30 14:09:14.198 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.204 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.209 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.412 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.417 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.420 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.421 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.436 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.437 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy113] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.440 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.441 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.442 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.469 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.486 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.506 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.507 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.508 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.528 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.529 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.546 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.547 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.549 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.566 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.584 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$f47745dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.586 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$a6c407f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.588 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$61daede4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.592 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.593 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.596 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$88a66512] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.599 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.601 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$d682e36b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.608 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.609 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.611 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.612 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.624 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.635 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.638 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.638 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.646 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.657 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 14:09:14.827 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2023-06-30 14:09:14.835 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2023-06-30 14:09:14.839 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-30 14:09:14.839 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.22]
2023-06-30 14:09:14.887 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-30 14:09:14.887 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1838 ms
2023-06-30 14:09:15.347 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2023-06-30 14:09:15.353 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2023-06-30 14:09:15.353 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.1 created.
2023-06-30 14:09:15.353 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2023-06-30 14:09:15.354 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2023-06-30 14:09:15.354 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2023-06-30 14:09:15.354 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.1
2023-06-30 14:09:15.354 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@77b71c9
2023-06-30 14:09:15.400 febs [main] INFO  p6spy - 2023-06-30 14:09:15 | 耗时 2 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2023-06-30 14:09:16.014 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-30 14:09:16.107 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2023-06-30 14:09:16.127 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2023-06-30 14:09:16.780 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2023-06-30 14:09:16.854 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2023-06-30 14:09:16.866 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-30 14:09:16.890 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2023-06-30 14:09:16.966 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_1
2023-06-30 14:09:16.973 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_2
2023-06-30 14:09:16.981 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_3
2023-06-30 14:09:16.985 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_4
2023-06-30 14:09:16.995 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_5
2023-06-30 14:09:17.017 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_6
2023-06-30 14:09:17.024 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_7
2023-06-30 14:09:17.038 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_8
2023-06-30 14:09:17.051 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2023-06-30 14:09:17.051 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2023-06-30 14:09:17.061 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2023-06-30 14:09:17.069 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-06-30 14:09:17.075 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2023-06-30 14:09:17.076 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 4.309 seconds (JVM running for 4.608)
2023-06-30 14:09:17.081 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2023-06-30 14:09:17.083 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2023-06-30 14:09:17.083 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2023-06-30 14:09:17.105 febs [main] INFO  p6spy - 2023-06-30 14:09:17 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,description,password,modify_time,email,ssex,mobile,dept_id,avatar,last_login_time,create_time,status,username FROM t_user;
2023-06-30 14:09:17.111 febs [main] INFO  p6spy - 2023-06-30 14:09:17 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 14:09:17.139 febs [main] INFO  p6spy - 2023-06-30 14:09:17 | 耗时 2 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2023-06-30 14:09:17.151 febs [main] INFO  p6spy - 2023-06-30 14:09:17 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2023-06-30 14:09:17.165 febs [main] INFO  p6spy - 2023-06-30 14:09:17 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,layout,color,multi_page,fix_siderbar,fix_header,theme FROM t_user_config WHERE USER_ID='1' ;
2023-06-30 14:09:17.170 febs [main] INFO  p6spy - 2023-06-30 14:09:17 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 14:09:17.175 febs [main] INFO  p6spy - 2023-06-30 14:09:17 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2023-06-30 14:09:17.179 febs [main] INFO  p6spy - 2023-06-30 14:09:17 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2023-06-30 14:09:17.184 febs [main] INFO  p6spy - 2023-06-30 14:09:17 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,layout,color,multi_page,fix_siderbar,fix_header,theme FROM t_user_config WHERE USER_ID='2' ;
2023-06-30 14:09:17.190 febs [main] INFO  p6spy - 2023-06-30 14:09:17 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 14:09:17.195 febs [main] INFO  p6spy - 2023-06-30 14:09:17 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2023-06-30 14:09:17.201 febs [main] INFO  p6spy - 2023-06-30 14:09:17 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2023-06-30 14:09:17.206 febs [main] INFO  p6spy - 2023-06-30 14:09:17 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,layout,color,multi_page,fix_siderbar,fix_header,theme FROM t_user_config WHERE USER_ID='12' ;
2023-06-30 14:09:17.210 febs [main] INFO  p6spy - 2023-06-30 14:09:17 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'windqzy' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 14:09:17.222 febs [main] INFO  p6spy - 2023-06-30 14:09:17 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy';
2023-06-30 14:09:17.228 febs [main] INFO  p6spy - 2023-06-30 14:09:17 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'windqzy' and m.perms is not null and m.perms <> '';
2023-06-30 14:09:17.235 febs [main] INFO  p6spy - 2023-06-30 14:09:17 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,layout,color,multi_page,fix_siderbar,fix_header,theme FROM t_user_config WHERE USER_ID='13' ;
2023-06-30 14:09:17.237 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2023-06-30 14:09:17.237 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2023-06-30 14:09:17.237 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2023-06-30 14:09:17.237 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2023-06-30 14:09:17.237 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2023-06-30T14:09:17.237
2023-06-30 14:09:17.697 febs [RMI TCP Connection(2)-192.168.1.123] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-30 14:09:17.697 febs [RMI TCP Connection(2)-192.168.1.123] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-30 14:09:17.699 febs [RMI TCP Connection(3)-192.168.1.123] INFO  p6spy - 2023-06-30 14:09:17 | 耗时 2 ms | SQL 语句：
select 1;
2023-06-30 14:09:17.704 febs [RMI TCP Connection(2)-192.168.1.123] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2023-06-30 14:09:35.145 febs [http-nio-9527-exec-4] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-06-30 14:09:35.184 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 14:09:35 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-06-30T14:09:35.165+0800' WHERE (username = 'windqzy');
2023-06-30 14:09:35.188 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 14:09:35 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'windqzy' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 14:09:35.198 febs [http-nio-9527-exec-4] INFO  p6spy - 
2023-06-30 14:09:35.215 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 14:09:35 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( login_time, ip, location, username ) VALUES ( '2023-06-30T14:09:35.206+0800', '127.0.0.1', '', 'windqzy' );
2023-06-30 14:09:35.219 febs [http-nio-9527-exec-4] INFO  p6spy - 
2023-06-30 14:09:35.272 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 14:09:35.294 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 14:09:35 | 耗时 4 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy') order by m.order_num;
2023-06-30 14:09:35.376 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 14:09:35.381 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 14:09:35 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 14:09:35.384 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 14:09:35 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 14:09:35.388 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 14:09:35 | 耗时 3 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 14:09:35.390 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 14:09:35 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 14:09:35.392 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 14:09:35 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 14:33:56.634 febs [http-nio-9527-exec-4] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-06-30 14:33:56.659 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 14:33:56 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-06-30T14:33:56.650+0800' WHERE (username = 'windqzy');
2023-06-30 14:33:56.663 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 14:33:56 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'windqzy' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 14:33:56.670 febs [http-nio-9527-exec-4] INFO  p6spy - 
2023-06-30 14:33:56.679 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 14:33:56 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( login_time, ip, location, username ) VALUES ( '2023-06-30T14:33:56.673+0800', '127.0.0.1', '', 'windqzy' );
2023-06-30 14:33:56.682 febs [http-nio-9527-exec-4] INFO  p6spy - 
2023-06-30 14:34:01.903 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 14:34:01.917 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 14:34:01 | 耗时 5 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy') order by m.order_num;
2023-06-30 14:34:02.058 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 14:34:02.065 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 14:34:02 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 14:34:02.068 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 14:34:02 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 14:34:02.072 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 14:34:02 | 耗时 2 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 14:34:02.076 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 14:34:02 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 14:34:02.081 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 14:34:02 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 15:09:17.058 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-06-30 15:16:31.364 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-06-30 15:16:31.388 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 15:16:31 | 耗时 6 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-06-30T15:16:31.375+0800' WHERE (username = 'windqzy');
2023-06-30 15:16:31.397 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 15:16:31 | 耗时 5 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'windqzy' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 15:16:31.410 febs [http-nio-9527-exec-3] INFO  p6spy - 
2023-06-30 15:16:31.426 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 15:16:31 | 耗时 4 ms | SQL 语句：
INSERT INTO t_login_log ( login_time, ip, location, username ) VALUES ( '2023-06-30T15:16:31.416+0800', '127.0.0.1', '', 'windqzy' );
2023-06-30 15:16:31.436 febs [http-nio-9527-exec-3] INFO  p6spy - 
2023-06-30 15:17:56.365 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 15:17:56.380 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 15:17:56 | 耗时 6 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy') order by m.order_num;
2023-06-30 15:17:59.342 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 15:17:59.355 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 15:17:59 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 15:17:59.359 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 15:17:59 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 15:17:59.362 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 15:17:59 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 15:17:59.365 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 15:17:59 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 15:17:59.369 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 15:17:59 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 15:22:07.121 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-06-30 15:22:07.142 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 15:22:07 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-06-30T15:22:07.133+0800' WHERE (username = 'windqzy');
2023-06-30 15:22:07.148 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 15:22:07 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'windqzy' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 15:22:07.158 febs [http-nio-9527-exec-3] INFO  p6spy - 
2023-06-30 15:22:07.169 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 15:22:07 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( login_time, ip, location, username ) VALUES ( '2023-06-30T15:22:07.163+0800', '127.0.0.1', '', 'windqzy' );
2023-06-30 15:22:07.172 febs [http-nio-9527-exec-3] INFO  p6spy - 
2023-06-30 15:22:50.349 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 15:22:50.357 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 15:22:50 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy') order by m.order_num;
2023-06-30 15:22:51.198 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 15:22:51.206 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 15:22:51 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 15:22:51.209 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 15:22:51 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 15:22:51.211 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 15:22:51 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 15:22:51.214 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 15:22:51 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 15:22:51.218 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 15:22:51 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 15:24:13.381 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-06-30 15:24:13.399 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 15:24:13 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-06-30T15:24:13.389+0800' WHERE (username = 'windqzy');
2023-06-30 15:24:13.406 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 15:24:13 | 耗时 5 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'windqzy' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 15:24:13.414 febs [http-nio-9527-exec-2] INFO  p6spy - 
2023-06-30 15:24:13.428 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 15:24:13 | 耗时 5 ms | SQL 语句：
INSERT INTO t_login_log ( login_time, ip, location, username ) VALUES ( '2023-06-30T15:24:13.419+0800', '127.0.0.1', '', 'windqzy' );
2023-06-30 15:24:13.433 febs [http-nio-9527-exec-2] INFO  p6spy - 
2023-06-30 15:29:35.823 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 15:29:35.836 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 15:29:35 | 耗时 4 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy') order by m.order_num;
2023-06-30 15:29:36.516 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 15:29:36.524 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 15:29:36 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 15:29:36.527 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 15:29:36 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 15:29:36.531 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 15:29:36 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 15:29:36.534 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 15:29:36 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 15:29:36.538 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 15:29:36 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 15:29:43.112 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 15:29:43.124 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 15:29:43 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 15:29:43.127 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 15:29:43 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 15:29:43.131 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 15:29:43 | 耗时 2 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 15:29:43.135 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 15:29:43 | 耗时 3 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 15:29:43.142 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 15:29:43 | 耗时 3 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 15:38:28.828 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 15:38:28.838 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 15:38:28 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 15:38:28.841 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 15:38:28 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 15:38:28.844 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 15:38:28 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 15:38:28.848 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 15:38:28 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 15:38:28.852 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 15:38:28 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 15:40:23.332 febs [http-nio-9527-exec-7] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-06-30 15:40:23.349 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 15:40:23 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-06-30T15:40:23.341+0800' WHERE (username = 'windqzy');
2023-06-30 15:40:23.355 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 15:40:23 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'windqzy' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 15:40:23.366 febs [http-nio-9527-exec-7] INFO  p6spy - 
2023-06-30 15:40:23.377 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 15:40:23 | 耗时 3 ms | SQL 语句：
INSERT INTO t_login_log ( login_time, ip, location, username ) VALUES ( '2023-06-30T15:40:23.370+0800', '127.0.0.1', '', 'windqzy' );
2023-06-30 15:40:23.382 febs [http-nio-9527-exec-7] INFO  p6spy - 
2023-06-30 15:42:13.244 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 15:42:13.259 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 15:42:13 | 耗时 6 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy') order by m.order_num;
2023-06-30 15:42:29.114 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 15:42:29.123 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 15:42:29 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 15:42:29.126 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 15:42:29 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 15:42:29.129 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 15:42:29 | 耗时 2 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 15:42:29.134 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 15:42:29 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 15:42:29.137 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 15:42:29 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 15:42:36.262 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 15:42:36.270 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 15:42:36 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 15:42:36.273 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 15:42:36 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 15:42:36.276 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 15:42:36 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 15:42:36.279 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 15:42:36 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 15:42:36.284 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 15:42:36 | 耗时 3 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 15:53:08.581 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 15:53:08.588 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 15:53:08 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 15:53:08.591 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 15:53:08 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 15:53:08.593 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 15:53:08 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 15:53:08.596 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 15:53:08 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 15:53:08.599 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 15:53:08 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 15:53:33.815 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-06-30 15:53:33.833 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 15:53:33 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-06-30T15:53:33.824+0800' WHERE (username = 'windqzy');
2023-06-30 15:53:33.838 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 15:53:33 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'windqzy' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 15:53:33.851 febs [http-nio-9527-exec-1] INFO  p6spy - 
2023-06-30 15:53:33.862 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 15:53:33 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( login_time, ip, location, username ) VALUES ( '2023-06-30T15:53:33.856+0800', '127.0.0.1', '', 'windqzy' );
2023-06-30 15:53:33.865 febs [http-nio-9527-exec-1] INFO  p6spy - 
2023-06-30 15:56:10.782 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 15:56:10.790 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 15:56:10 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy') order by m.order_num;
2023-06-30 15:56:22.806 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 15:56:22.813 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 15:56:22 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 15:56:22.817 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 15:56:22 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 15:56:22.822 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 15:56:22 | 耗时 3 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 15:56:22.828 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 15:56:22 | 耗时 3 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 15:56:22.834 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 15:56:22 | 耗时 3 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 15:58:05.757 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 15:58:05.767 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 15:58:05 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 15:58:05.770 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 15:58:05 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 15:58:05.773 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 15:58:05 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 15:58:05.779 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 15:58:05 | 耗时 4 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 15:58:05.783 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 15:58:05 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 16:07:22.501 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:07:22.508 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 16:07:22 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 16:07:22.512 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 16:07:22 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:07:22.517 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 16:07:22 | 耗时 3 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:07:22.521 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 16:07:22 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 16:07:22.526 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 16:07:22 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 16:09:00.552 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:09:00.562 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 16:09:00 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 16:09:00.565 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 16:09:00 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:09:00.568 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 16:09:00 | 耗时 2 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:09:00.573 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 16:09:00 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 16:09:00.577 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 16:09:00 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 16:09:17.094 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-06-30 16:11:18.520 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:11:18.529 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 16:11:18 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 16:11:18.533 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 16:11:18 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:11:18.536 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 16:11:18 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:11:18.539 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 16:11:18 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 16:11:18.542 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 16:11:18 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 16:12:11.511 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:12:11.519 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 16:12:11 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 16:12:11.522 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 16:12:11 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:12:11.524 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 16:12:11 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:12:11.527 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 16:12:11 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 16:12:11.530 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 16:12:11 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 16:12:11.553 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:12:11.558 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 16:12:11 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 16:12:11.561 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 16:12:11 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:12:11.564 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 16:12:11 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:12:11.567 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 16:12:11 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 16:12:11.571 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 16:12:11 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 16:12:54.427 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:12:54.435 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 16:12:54 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 16:12:54.439 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 16:12:54 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:12:54.442 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 16:12:54 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:12:54.444 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 16:12:54 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 16:12:54.448 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 16:12:54 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 16:28:41.022 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:28:41.034 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 16:28:41 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 16:28:41.039 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 16:28:41 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:28:41.043 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 16:28:41 | 耗时 2 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:28:41.047 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 16:28:41 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 16:28:41.051 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 16:28:41 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 16:29:05.388 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:29:05.397 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 16:29:05 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 16:29:05.401 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 16:29:05 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:29:05.405 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 16:29:05 | 耗时 2 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:29:05.410 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 16:29:05 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 16:29:05.414 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 16:29:05 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 16:29:39.806 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:29:39.817 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 16:29:39 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 16:29:39.822 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 16:29:39 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:29:39.826 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 16:29:39 | 耗时 2 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:29:39.831 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 16:29:39 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 16:29:39.836 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 16:29:39 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 16:29:52.579 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:29:52.585 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 16:29:52 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 16:29:52.588 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 16:29:52 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:29:52.593 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 16:29:52 | 耗时 2 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:29:52.597 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 16:29:52 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 16:29:52.601 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 16:29:52 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 16:29:54.896 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:29:54.903 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 16:29:54 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 16:29:54.906 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 16:29:54 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:29:54.910 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 16:29:54 | 耗时 2 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:29:54.914 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 16:29:54 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 16:29:54.919 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 16:29:54 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 16:32:18.099 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:32:18.109 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 16:32:18 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 16:32:18.112 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 16:32:18 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:32:18.114 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 16:32:18 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:32:18.117 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 16:32:18 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 16:32:18.120 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 16:32:18 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 16:32:34.073 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:32:34.081 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 16:32:34 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 16:32:34.083 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 16:32:34 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:32:34.087 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 16:32:34 | 耗时 2 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:32:34.093 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 16:32:34 | 耗时 3 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 16:32:34.097 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 16:32:34 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 16:32:44.302 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:32:44.309 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 16:32:44 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 16:32:44.313 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 16:32:44 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:32:44.317 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 16:32:44 | 耗时 2 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:32:44.321 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 16:32:44 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 16:32:44.324 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 16:32:44 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 16:34:06.953 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:34:06.963 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 16:34:06 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 16:34:06.966 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 16:34:06 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:34:06.969 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 16:34:06 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:34:06.972 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 16:34:06 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 16:34:06.979 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 16:34:06 | 耗时 3 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 16:34:31.229 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:34:31.236 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 16:34:31 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 16:34:31.239 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 16:34:31 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:34:31.241 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 16:34:31 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:34:31.243 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 16:34:31 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 16:34:31.246 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 16:34:31 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 16:39:33.202 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:39:33.202 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:39:33.220 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 16:39:33 | 耗时 1 ms | SQL 语句：
SELECT DEPT_ID,dept_name,modify_time,create_time,order_num,parent_id FROM t_dept ORDER BY order_num ASC;
2023-06-30 16:39:33.251 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 16:39:33 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2023-06-30 16:39:33.265 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 16:39:33 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId LIMIT 0,10;
2023-06-30 16:42:37.334 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:42:37.335 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:42:37.344 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 16:42:37 | 耗时 1 ms | SQL 语句：
SELECT DEPT_ID,dept_name,modify_time,create_time,order_num,parent_id FROM t_dept ORDER BY order_num ASC;
2023-06-30 16:42:37.351 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 16:42:37 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2023-06-30 16:42:37.356 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 16:42:37 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId LIMIT 0,10;
2023-06-30 16:43:32.946 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:43:32.946 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:43:32.957 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 16:43:32 | 耗时 3 ms | SQL 语句：
SELECT DEPT_ID,dept_name,modify_time,create_time,order_num,parent_id FROM t_dept ORDER BY order_num ASC;
2023-06-30 16:43:32.964 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 16:43:32 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2023-06-30 16:43:32.971 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 16:43:32 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId LIMIT 0,10;
2023-06-30 16:43:43.383 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:43:43.383 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:43:43.390 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 16:43:43 | 耗时 1 ms | SQL 语句：
SELECT DEPT_ID,dept_name,modify_time,create_time,order_num,parent_id FROM t_dept ORDER BY order_num ASC;
2023-06-30 16:43:43.402 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 16:43:43 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2023-06-30 16:43:43.408 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 16:43:43 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId LIMIT 0,10;
2023-06-30 16:44:16.451 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:44:16.452 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:44:16.462 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 16:44:16 | 耗时 1 ms | SQL 语句：
SELECT DEPT_ID,dept_name,modify_time,create_time,order_num,parent_id FROM t_dept ORDER BY order_num ASC;
2023-06-30 16:44:16.469 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 16:44:16 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2023-06-30 16:44:16.473 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 16:44:16 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId LIMIT 0,10;
2023-06-30 16:44:43.376 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:44:43.377 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:44:43.389 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 16:44:43 | 耗时 1 ms | SQL 语句：
SELECT DEPT_ID,dept_name,modify_time,create_time,order_num,parent_id FROM t_dept ORDER BY order_num ASC;
2023-06-30 16:44:43.398 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 16:44:43 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2023-06-30 16:44:43.404 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 16:44:43 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId LIMIT 0,10;
2023-06-30 16:44:55.100 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:44:55.100 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:44:55.112 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 16:44:55 | 耗时 2 ms | SQL 语句：
SELECT DEPT_ID,dept_name,modify_time,create_time,order_num,parent_id FROM t_dept ORDER BY order_num ASC;
2023-06-30 16:44:55.120 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 16:44:55 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2023-06-30 16:44:55.126 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 16:44:55 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId LIMIT 0,10;
2023-06-30 16:47:01.758 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:47:01.758 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:47:01.769 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 16:47:01 | 耗时 2 ms | SQL 语句：
SELECT DEPT_ID,dept_name,modify_time,create_time,order_num,parent_id FROM t_dept ORDER BY order_num ASC;
2023-06-30 16:47:01.774 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 16:47:01 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2023-06-30 16:47:01.777 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 16:47:01 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId LIMIT 0,10;
2023-06-30 16:58:07.358 febs [http-nio-9527-exec-10] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-06-30 16:58:07.377 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 16:58:07 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-06-30T16:58:07.367+0800' WHERE (username = 'windqzy');
2023-06-30 16:58:07.382 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 16:58:07 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'windqzy' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 16:58:07.405 febs [http-nio-9527-exec-10] INFO  p6spy - 
2023-06-30 16:58:07.419 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 16:58:07 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( login_time, ip, location, username ) VALUES ( '2023-06-30T16:58:07.412+0800', '127.0.0.1', '', 'windqzy' );
2023-06-30 16:58:07.422 febs [http-nio-9527-exec-10] INFO  p6spy - 
2023-06-30 16:58:12.324 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:58:12.334 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 16:58:12 | 耗时 4 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy') order by m.order_num;
2023-06-30 16:58:13.770 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 16:58:13.774 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 16:58:13 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 16:58:13.776 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 16:58:13 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:58:13.777 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 16:58:13 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 16:58:13.778 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 16:58:13 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 16:58:13.780 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 16:58:13 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:03:05.698 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:03:05.705 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 17:03:05 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:03:05.709 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 17:03:05 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:03:05.714 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 17:03:05 | 耗时 3 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:03:05.717 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 17:03:05 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:03:05.719 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 17:03:05 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:03:08.071 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:03:08.085 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:03:08 | 耗时 7 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:03:08.092 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:03:08 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:03:08.094 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:03:08 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:03:08.098 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:03:08 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:03:08.100 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:03:08 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:03:11.268 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:03:11.275 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 17:03:11 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:03:11.278 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 17:03:11 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:03:11.282 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 17:03:11 | 耗时 2 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:03:11.285 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 17:03:11 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:03:11.288 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 17:03:11 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:03:15.538 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:03:15.549 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:03:15 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:03:15.552 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:03:15 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:03:15.554 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:03:15 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:03:15.558 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:03:15 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:03:15.562 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:03:15 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:06:47.319 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:06:47.325 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:06:47 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:06:47.327 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:06:47 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:06:47.329 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:06:47 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:06:47.331 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:06:47 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:06:47.333 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:06:47 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:07:25.611 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:07:25.619 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:07:25 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:07:25.622 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:07:25 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:07:25.625 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:07:25 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:07:25.628 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:07:25 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:07:25.632 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:07:25 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:08:50.455 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:08:50.466 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 17:08:50 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:08:50.470 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 17:08:50 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:08:50.473 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 17:08:50 | 耗时 2 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:08:50.478 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 17:08:50 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:08:50.482 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 17:08:50 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:09:17.063 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-06-30 17:09:45.253 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:09:45.262 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:09:45 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:09:45.265 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:09:45 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:09:45.267 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:09:45 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:09:45.271 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:09:45 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:09:45.274 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:09:45 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:10:09.730 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:10:09.737 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:10:09 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:10:09.740 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:10:09 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:10:09.743 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:10:09 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:10:09.746 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:10:09 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:10:09.749 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:10:09 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:10:39.118 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:10:39.126 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 17:10:39 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:10:39.128 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 17:10:39 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:10:39.130 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 17:10:39 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:10:39.133 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 17:10:39 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:10:39.136 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 17:10:39 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:13:24.395 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:13:24.405 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:13:24 | 耗时 4 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:13:24.408 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:13:24 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:13:24.411 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:13:24 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:13:24.414 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:13:24 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:13:24.417 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:13:24 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:14:02.514 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:14:02.521 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 17:14:02 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:14:02.525 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 17:14:02 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:14:02.528 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 17:14:02 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:14:02.531 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 17:14:02 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:14:02.536 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 17:14:02 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:14:14.899 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:14:14.903 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:14:14 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:14:14.905 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:14:14 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:14:14.907 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:14:14 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:14:14.908 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:14:14 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:14:14.910 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:14:14 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:14:28.082 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:14:28.088 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:14:28 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:14:28.090 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:14:28 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:14:28.092 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:14:28 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:14:28.097 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:14:28 | 耗时 3 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:14:28.100 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:14:28 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:15:01.371 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:15:01.378 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:15:01 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:15:01.381 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:15:01 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:15:01.386 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:15:01 | 耗时 2 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:15:01.390 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:15:01 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:15:01.394 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:15:01 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:20:08.067 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:20:08.075 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 17:20:08 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:20:08.080 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 17:20:08 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:20:08.083 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 17:20:08 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:20:08.086 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 17:20:08 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:20:08.090 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 17:20:08 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:20:56.200 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:20:56.211 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:20:56 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:20:56.214 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:20:56 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:20:56.218 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:20:56 | 耗时 2 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:20:56.222 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:20:56 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:20:56.227 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:20:56 | 耗时 3 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:21:07.112 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:21:07.118 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:21:07 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:21:07.122 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:21:07 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:21:07.125 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:21:07 | 耗时 2 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:21:07.129 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:21:07 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:21:07.136 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:21:07 | 耗时 3 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:26:30.104 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:26:30.113 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:26:30 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 17:26:40.827 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:26:40.843 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:26:40 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu WHERE (type = '0');
2023-06-30 17:27:01.894 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:27:01.912 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 17:27:01 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu WHERE (type = '0');
2023-06-30 17:27:19.398 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:27:19.409 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:27:19 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu WHERE (type = '0');
2023-06-30 17:28:47.850 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:28:47.862 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 17:28:47 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu WHERE (type = '0');
2023-06-30 17:29:02.234 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:29:02.248 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 17:29:02 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu WHERE (type = '0');
2023-06-30 17:30:00.877 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:30:00.926 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 17:30:00 | 耗时 21 ms | SQL 语句：
INSERT INTO t_menu ( icon, order_num, menu_name, type, parent_id, path, component, create_time ) VALUES ( 'car', 1.0, 'AI', '0', 0, '/ai', 'PageView', '2023-06-30T17:30:00.902+0800' );
2023-06-30 17:30:00.940 febs [http-nio-9527-exec-10] INFO  p6spy - 
2023-06-30 17:30:00.957 febs [asyncTaskExecutor-1] INFO  p6spy - 2023-06-30 17:30:00 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log ( method, create_time, ip, location, time, params, operation, username ) VALUES ( 'cc.mrbird.febs.system.controller.MenuController.addMenu()', '2023-06-30T17:30:00.952+0800', '127.0.0.1', '', 45, ' menu: "Menu(menuId=139, parentId=0, menuName=AI, path=/ai, component=PageView, perms=null, icon=car, type=0, orderNum=1.0, createTime=Fri Jun 30 17:30:00 CST 2023, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '新增菜单/按钮', 'windqzy' );
2023-06-30 17:30:00.962 febs [asyncTaskExecutor-1] INFO  p6spy - 
2023-06-30 17:30:01.050 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:30:01.059 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:30:01 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 17:30:11.569 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:30:11.583 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:30:11 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 17:30:18.451 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:30:18.463 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 17:30:18 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu WHERE (type = '0');
2023-06-30 17:31:07.872 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:31:07.894 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 17:31:07 | 耗时 3 ms | SQL 语句：
UPDATE t_menu SET icon='android', order_num=1.0, menu_name='AI', type='0', parent_id=0, path='/ai', component='PageView', modify_time='2023-06-30T17:31:07.885+0800' WHERE MENU_ID=139;
2023-06-30 17:31:07.898 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 17:31:07 | 耗时 2 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '139' );
2023-06-30 17:31:07.904 febs [http-nio-9527-exec-8] INFO  p6spy - 
2023-06-30 17:31:07.918 febs [asyncTaskExecutor-2] INFO  p6spy - 2023-06-30 17:31:07 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log ( method, create_time, ip, location, time, params, operation, username ) VALUES ( 'cc.mrbird.febs.system.controller.MenuController.updateMenu()', '2023-06-30T17:31:07.913+0800', '127.0.0.1', '', 27, ' menu: "Menu(menuId=139, parentId=0, menuName=AI, path=/ai, component=PageView, perms=null, icon=android, type=0, orderNum=1.0, createTime=null, modifyTime=Fri Jun 30 17:31:07 CST 2023, createTimeFrom=null, createTimeTo=null)"', '修改菜单/按钮', 'windqzy' );
2023-06-30 17:31:07.921 febs [asyncTaskExecutor-2] INFO  p6spy - 
2023-06-30 17:31:08.002 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:31:08.011 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 17:31:08 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 17:31:11.232 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:31:11.242 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:31:11 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu WHERE (type = '0');
2023-06-30 17:31:17.728 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:31:17.738 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:31:17 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu WHERE (type = '0');
2023-06-30 17:36:32.492 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:36:32.507 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:36:32 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu WHERE (type = '0');
2023-06-30 17:36:40.559 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:36:40.572 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:36:40 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu WHERE (type = '0');
2023-06-30 17:37:53.674 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:37:53.691 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:37:53 | 耗时 3 ms | SQL 语句：
INSERT INTO t_menu ( icon, order_num, menu_name, type, parent_id, path, component, create_time ) VALUES ( 'frown', 1.0, 'CHAT', '0', 139, '/ai/chat', '/ai/chat/Chat', '2023-06-30T17:37:53.685+0800' );
2023-06-30 17:37:53.698 febs [http-nio-9527-exec-1] INFO  p6spy - 
2023-06-30 17:37:53.711 febs [asyncTaskExecutor-3] INFO  p6spy - 2023-06-30 17:37:53 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log ( method, create_time, ip, location, time, params, operation, username ) VALUES ( 'cc.mrbird.febs.system.controller.MenuController.addMenu()', '2023-06-30T17:37:53.705+0800', '127.0.0.1', '', 21, ' menu: "Menu(menuId=140, parentId=139, menuName=CHAT, path=/ai/chat, component=/ai/chat/Chat, perms=null, icon=frown, type=0, orderNum=1.0, createTime=Fri Jun 30 17:37:53 CST 2023, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '新增菜单/按钮', 'windqzy' );
2023-06-30 17:37:53.717 febs [asyncTaskExecutor-3] INFO  p6spy - 
2023-06-30 17:37:53.795 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:37:53.807 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:37:53 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 17:38:00.455 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:38:00.467 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 17:38:00 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 17:38:02.858 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:38:02.871 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:38:02 | 耗时 3 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 17:38:13.423 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:38:13.433 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:38:13 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu WHERE (type = '0');
2023-06-30 17:38:35.617 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-06-30 17:38:35.630 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:38:35 | 耗时 3 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-06-30T17:38:35.624+0800' WHERE (username = 'windqzy');
2023-06-30 17:38:35.636 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:38:35 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'windqzy' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 17:38:35.647 febs [http-nio-9527-exec-3] INFO  p6spy - 
2023-06-30 17:38:35.658 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:38:35 | 耗时 3 ms | SQL 语句：
INSERT INTO t_login_log ( login_time, ip, location, username ) VALUES ( '2023-06-30T17:38:35.651+0800', '127.0.0.1', '', 'windqzy' );
2023-06-30 17:38:35.665 febs [http-nio-9527-exec-3] INFO  p6spy - 
2023-06-30 17:38:35.693 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:38:35.700 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:38:35 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy') order by m.order_num;
2023-06-30 17:38:35.780 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:38:35.785 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:38:35 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:38:35.786 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:38:35 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:38:35.788 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:38:35 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:38:35.789 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:38:35 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:38:35.791 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:38:35 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:38:41.272 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:38:41.281 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:38:41 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 17:39:02.257 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:39:02.268 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 17:39:02 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu WHERE (type = '0');
2023-06-30 17:39:17.670 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:39:17.687 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:39:17 | 耗时 2 ms | SQL 语句：
UPDATE t_menu SET icon='copyright', order_num=1.0, menu_name='CHAT', type='0', parent_id=139, path='/ai/chat', component='/ai/chat/Chat', modify_time='2023-06-30T17:39:17.682+0800' WHERE MENU_ID=140;
2023-06-30 17:39:17.689 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:39:17 | 耗时 1 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '140' );
2023-06-30 17:39:17.692 febs [http-nio-9527-exec-3] INFO  p6spy - 
2023-06-30 17:39:17.698 febs [asyncTaskExecutor-4] INFO  p6spy - 2023-06-30 17:39:17 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( method, create_time, ip, location, time, params, operation, username ) VALUES ( 'cc.mrbird.febs.system.controller.MenuController.updateMenu()', '2023-06-30T17:39:17.695+0800', '127.0.0.1', '', 16, ' menu: "Menu(menuId=140, parentId=139, menuName=CHAT, path=/ai/chat, component=/ai/chat/Chat, perms=null, icon=copyright, type=0, orderNum=1.0, createTime=null, modifyTime=Fri Jun 30 17:39:17 CST 2023, createTimeFrom=null, createTimeTo=null)"', '修改菜单/按钮', 'windqzy' );
2023-06-30 17:39:17.700 febs [asyncTaskExecutor-4] INFO  p6spy - 
2023-06-30 17:39:17.781 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:39:17.790 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:17 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 17:39:29.369 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:39:29.375 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:39:29 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:39:29.377 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:39:29 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:39:29.380 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:39:29 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:39:29.383 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:39:29 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:39:29.385 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:39:29 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:39:32.939 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:39:32.969 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:39:32 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2023-06-30 17:39:32.971 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:39:32 | 耗时 1 ms | SQL 语句：
SELECT ROLE_ID,modify_time,create_time,role_name,remark FROM t_role LIMIT 0,10;
2023-06-30 17:39:36.928 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:39:36.938 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 17:39:36 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 17:39:36.957 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:39:36.971 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:39:36 | 耗时 2 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE (role_id = '1');
2023-06-30 17:39:41.565 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:39:41.597 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 2 ms | SQL 语句：
SELECT role_id,user_id FROM t_user_role WHERE (role_id IN ('1'));
2023-06-30 17:39:41.608 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 8 ms | SQL 语句：
UPDATE t_role SET modify_time='2023-06-30T17:39:41.598+0800', role_name='管理员', remark='管理员' WHERE ROLE_ID=1;
2023-06-30 17:39:41.622 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 9 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (role_id = 1);
2023-06-30 17:39:41.635 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 9 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 1 );
2023-06-30 17:39:41.638 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 3 );
2023-06-30 17:39:41.641 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 11 );
2023-06-30 17:39:41.645 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 12 );
2023-06-30 17:39:41.648 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 13 );
2023-06-30 17:39:41.651 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 4 );
2023-06-30 17:39:41.653 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 14 );
2023-06-30 17:39:41.656 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 15 );
2023-06-30 17:39:41.659 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 16 );
2023-06-30 17:39:41.662 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 5 );
2023-06-30 17:39:41.665 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 17 );
2023-06-30 17:39:41.667 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 18 );
2023-06-30 17:39:41.670 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 19 );
2023-06-30 17:39:41.673 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 6 );
2023-06-30 17:39:41.675 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 20 );
2023-06-30 17:39:41.678 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 21 );
2023-06-30 17:39:41.681 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 22 );
2023-06-30 17:39:41.684 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 64 );
2023-06-30 17:39:41.688 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 65 );
2023-06-30 17:39:41.691 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 66 );
2023-06-30 17:39:41.694 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 67 );
2023-06-30 17:39:41.696 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 2 );
2023-06-30 17:39:41.699 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 8 );
2023-06-30 17:39:41.702 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 23 );
2023-06-30 17:39:41.706 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 10 );
2023-06-30 17:39:41.709 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 24 );
2023-06-30 17:39:41.712 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 113 );
2023-06-30 17:39:41.714 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 121 );
2023-06-30 17:39:41.717 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 122 );
2023-06-30 17:39:41.720 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 124 );
2023-06-30 17:39:41.722 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 123 );
2023-06-30 17:39:41.724 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 125 );
2023-06-30 17:39:41.727 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 101 );
2023-06-30 17:39:41.730 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 102 );
2023-06-30 17:39:41.733 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 103 );
2023-06-30 17:39:41.735 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 104 );
2023-06-30 17:39:41.738 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 105 );
2023-06-30 17:39:41.740 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 106 );
2023-06-30 17:39:41.743 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 107 );
2023-06-30 17:39:41.746 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 108 );
2023-06-30 17:39:41.748 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 109 );
2023-06-30 17:39:41.751 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 110 );
2023-06-30 17:39:41.754 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 58 );
2023-06-30 17:39:41.757 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 59 );
2023-06-30 17:39:41.759 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 61 );
2023-06-30 17:39:41.762 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 81 );
2023-06-30 17:39:41.764 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 82 );
2023-06-30 17:39:41.767 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 83 );
2023-06-30 17:39:41.770 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 127 );
2023-06-30 17:39:41.772 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 128 );
2023-06-30 17:39:41.775 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 129 );
2023-06-30 17:39:41.778 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 130 );
2023-06-30 17:39:41.780 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 135 );
2023-06-30 17:39:41.783 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 131 );
2023-06-30 17:39:41.786 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 132 );
2023-06-30 17:39:41.788 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 133 );
2023-06-30 17:39:41.791 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 134 );
2023-06-30 17:39:41.793 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 136 );
2023-06-30 17:39:41.796 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 137 );
2023-06-30 17:39:41.799 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 138 );
2023-06-30 17:39:41.801 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 139 );
2023-06-30 17:39:41.805 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,description,password,modify_time,email,ssex,mobile,dept_id,avatar,last_login_time,create_time,status,username FROM t_user WHERE USER_ID='13' ;
2023-06-30 17:39:41.807 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy';
2023-06-30 17:39:41.810 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'windqzy' and m.perms is not null and m.perms <> '';
2023-06-30 17:39:41.813 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,description,password,modify_time,email,ssex,mobile,dept_id,avatar,last_login_time,create_time,status,username FROM t_user WHERE USER_ID='1' ;
2023-06-30 17:39:41.814 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2023-06-30 17:39:41.817 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2023-06-30 17:39:41.826 febs [asyncTaskExecutor-5] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( method, create_time, ip, location, time, params, operation, username ) VALUES ( 'cc.mrbird.febs.system.controller.RoleController.updateRole()', '2023-06-30T17:39:41.823+0800', '127.0.0.1', '', 244, ' role: "Role(roleId=1, roleName=管理员, remark=管理员, createTime=null, modifyTime=Fri Jun 30 17:39:41 CST 2023, createTimeFrom=null, createTimeTo=null, menuId=1,3,11,12,13,4,14,15,16,5,17,18,19,6,20,21,22,64,65,66,67,2,8,23,10,24,113,121,122,124,123,125,101,102,103,104,105,106,107,108,109,110,58,59,61,81,82,83,127,128,129,130,135,131,132,133,134,136,137,138,139)"', '修改角色', 'windqzy' );
2023-06-30 17:39:41.828 febs [asyncTaskExecutor-5] INFO  p6spy - 
2023-06-30 17:39:41.849 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:39:41.857 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2023-06-30 17:39:41.859 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:39:41 | 耗时 1 ms | SQL 语句：
SELECT ROLE_ID,modify_time,create_time,role_name,remark FROM t_role LIMIT 0,10;
2023-06-30 17:39:44.945 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:39:44.956 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:39:44 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2023-06-30 17:39:44.958 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:39:44 | 耗时 1 ms | SQL 语句：
SELECT ROLE_ID,modify_time,create_time,role_name,remark FROM t_role LIMIT 0,10;
2023-06-30 17:40:05.066 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-06-30 17:40:05.099 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:40:05 | 耗时 23 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-06-30T17:40:05.073+0800' WHERE (username = 'windqzy');
2023-06-30 17:40:05.103 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:40:05 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'windqzy' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 17:40:05.110 febs [http-nio-9527-exec-3] INFO  p6spy - 
2023-06-30 17:40:05.118 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:40:05 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( login_time, ip, location, username ) VALUES ( '2023-06-30T17:40:05.113+0800', '127.0.0.1', '', 'windqzy' );
2023-06-30 17:40:05.121 febs [http-nio-9527-exec-3] INFO  p6spy - 
2023-06-30 17:40:05.147 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:40:05.155 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:40:05 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy') order by m.order_num;
2023-06-30 17:40:05.270 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:40:05.274 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:40:05 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:40:05.276 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:40:05 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:40:05.278 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:40:05 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:40:05.281 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:40:05 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:40:05.287 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:40:05 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:40:07.747 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:40:07.757 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 17:40:07 | 耗时 5 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:40:07.760 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 17:40:07 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:40:07.763 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 17:40:07 | 耗时 2 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:40:07.766 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 17:40:07 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:40:07.771 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 17:40:07 | 耗时 3 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:40:33.687 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:40:33.696 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 17:40:33 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2023-06-30 17:40:33.698 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 17:40:33 | 耗时 1 ms | SQL 语句：
SELECT ROLE_ID,modify_time,create_time,role_name,remark FROM t_role LIMIT 0,10;
2023-06-30 17:40:34.325 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:40:34.353 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:40:34 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_dict;
2023-06-30 17:40:34.355 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:40:34 | 耗时 2 ms | SQL 语句：
SELECT DICT_ID,valuee,field_name,keyy,table_name FROM t_dict LIMIT 0,10;
2023-06-30 17:40:37.741 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:40:37.746 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:40:37 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:40:37.748 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:40:37 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:40:37.750 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:40:37 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:40:37.752 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:40:37 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:40:37.756 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:40:37 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:43:03.756 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:43:03.769 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:43:03 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2023-06-30 17:43:03.771 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:43:03 | 耗时 1 ms | SQL 语句：
SELECT ROLE_ID,modify_time,create_time,role_name,remark FROM t_role LIMIT 0,10;
2023-06-30 17:43:05.562 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:43:05.572 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:43:05 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 17:43:05.593 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:43:05.599 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 17:43:05 | 耗时 2 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE (role_id = '1');
2023-06-30 17:43:09.276 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:43:09.286 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
SELECT role_id,user_id FROM t_user_role WHERE (role_id IN ('1'));
2023-06-30 17:43:09.294 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 6 ms | SQL 语句：
UPDATE t_role SET modify_time='2023-06-30T17:43:09.286+0800', role_name='管理员', remark='管理员' WHERE ROLE_ID=1;
2023-06-30 17:43:09.301 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 5 ms | SQL 语句：
DELETE FROM t_role_menu WHERE (role_id = 1);
2023-06-30 17:43:09.307 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 1 );
2023-06-30 17:43:09.314 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 3 );
2023-06-30 17:43:09.321 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 11 );
2023-06-30 17:43:09.326 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 12 );
2023-06-30 17:43:09.331 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 13 );
2023-06-30 17:43:09.335 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 4 );
2023-06-30 17:43:09.339 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 14 );
2023-06-30 17:43:09.344 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 15 );
2023-06-30 17:43:09.348 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 16 );
2023-06-30 17:43:09.352 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 5 );
2023-06-30 17:43:09.355 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 17 );
2023-06-30 17:43:09.360 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 18 );
2023-06-30 17:43:09.364 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 19 );
2023-06-30 17:43:09.367 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 6 );
2023-06-30 17:43:09.371 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 20 );
2023-06-30 17:43:09.374 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 21 );
2023-06-30 17:43:09.378 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 22 );
2023-06-30 17:43:09.382 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 64 );
2023-06-30 17:43:09.385 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 65 );
2023-06-30 17:43:09.389 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 66 );
2023-06-30 17:43:09.391 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 67 );
2023-06-30 17:43:09.394 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 2 );
2023-06-30 17:43:09.397 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 8 );
2023-06-30 17:43:09.400 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 23 );
2023-06-30 17:43:09.403 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 10 );
2023-06-30 17:43:09.405 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 24 );
2023-06-30 17:43:09.408 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 113 );
2023-06-30 17:43:09.411 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 121 );
2023-06-30 17:43:09.413 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 122 );
2023-06-30 17:43:09.416 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 124 );
2023-06-30 17:43:09.419 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 123 );
2023-06-30 17:43:09.421 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 125 );
2023-06-30 17:43:09.424 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 101 );
2023-06-30 17:43:09.427 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 102 );
2023-06-30 17:43:09.429 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 103 );
2023-06-30 17:43:09.432 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 104 );
2023-06-30 17:43:09.434 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 105 );
2023-06-30 17:43:09.437 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 106 );
2023-06-30 17:43:09.440 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 107 );
2023-06-30 17:43:09.443 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 108 );
2023-06-30 17:43:09.446 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 109 );
2023-06-30 17:43:09.449 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 110 );
2023-06-30 17:43:09.451 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 58 );
2023-06-30 17:43:09.454 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 59 );
2023-06-30 17:43:09.457 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 61 );
2023-06-30 17:43:09.459 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 81 );
2023-06-30 17:43:09.462 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 82 );
2023-06-30 17:43:09.465 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 83 );
2023-06-30 17:43:09.468 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 127 );
2023-06-30 17:43:09.471 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 128 );
2023-06-30 17:43:09.473 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 129 );
2023-06-30 17:43:09.476 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 130 );
2023-06-30 17:43:09.479 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 135 );
2023-06-30 17:43:09.482 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 131 );
2023-06-30 17:43:09.485 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 132 );
2023-06-30 17:43:09.487 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 133 );
2023-06-30 17:43:09.491 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 134 );
2023-06-30 17:43:09.493 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 136 );
2023-06-30 17:43:09.496 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 137 );
2023-06-30 17:43:09.499 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 2 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 138 );
2023-06-30 17:43:09.502 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 139 );
2023-06-30 17:43:09.504 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 140 );
2023-06-30 17:43:09.506 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,description,password,modify_time,email,ssex,mobile,dept_id,avatar,last_login_time,create_time,status,username FROM t_user WHERE USER_ID='13' ;
2023-06-30 17:43:09.509 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy';
2023-06-30 17:43:09.511 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'windqzy' and m.perms is not null and m.perms <> '';
2023-06-30 17:43:09.515 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,description,password,modify_time,email,ssex,mobile,dept_id,avatar,last_login_time,create_time,status,username FROM t_user WHERE USER_ID='1' ;
2023-06-30 17:43:09.516 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2023-06-30 17:43:09.519 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2023-06-30 17:43:09.527 febs [asyncTaskExecutor-1] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( method, create_time, ip, location, time, params, operation, username ) VALUES ( 'cc.mrbird.febs.system.controller.RoleController.updateRole()', '2023-06-30T17:43:09.524+0800', '127.0.0.1', '', 240, ' role: "Role(roleId=1, roleName=管理员, remark=管理员, createTime=null, modifyTime=Fri Jun 30 17:43:09 CST 2023, createTimeFrom=null, createTimeTo=null, menuId=1,3,11,12,13,4,14,15,16,5,17,18,19,6,20,21,22,64,65,66,67,2,8,23,10,24,113,121,122,124,123,125,101,102,103,104,105,106,107,108,109,110,58,59,61,81,82,83,127,128,129,130,135,131,132,133,134,136,137,138,139,140)"', '修改角色', 'windqzy' );
2023-06-30 17:43:09.529 febs [asyncTaskExecutor-1] INFO  p6spy - 
2023-06-30 17:43:09.553 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:43:09.560 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2023-06-30 17:43:09.562 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:43:09 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID,modify_time,create_time,role_name,remark FROM t_role LIMIT 0,10;
2023-06-30 17:43:17.662 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:43:17.675 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:43:17 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2023-06-30 17:43:17.678 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:43:17 | 耗时 1 ms | SQL 语句：
SELECT ROLE_ID,modify_time,create_time,role_name,remark FROM t_role LIMIT 0,10;
2023-06-30 17:43:28.716 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-06-30 17:43:28.731 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 17:43:28 | 耗时 3 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-06-30T17:43:28.725+0800' WHERE (username = 'windqzy');
2023-06-30 17:43:28.736 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 17:43:28 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'windqzy' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 17:43:28.745 febs [http-nio-9527-exec-2] INFO  p6spy - 
2023-06-30 17:43:28.758 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 17:43:28 | 耗时 3 ms | SQL 语句：
INSERT INTO t_login_log ( login_time, ip, location, username ) VALUES ( '2023-06-30T17:43:28.751+0800', '127.0.0.1', '', 'windqzy' );
2023-06-30 17:43:28.761 febs [http-nio-9527-exec-2] INFO  p6spy - 
2023-06-30 17:43:28.791 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:43:28.797 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:43:28 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy') order by m.order_num;
2023-06-30 17:43:28.914 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:43:28.919 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:43:28 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:43:28.922 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:43:28 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:43:28.926 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:43:28 | 耗时 2 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:43:28.929 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:43:28 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:43:28.932 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:43:28 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:43:34.832 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:43:34.832 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:43:34.840 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:43:34 | 耗时 1 ms | SQL 语句：
SELECT DEPT_ID,dept_name,modify_time,create_time,order_num,parent_id FROM t_dept ORDER BY order_num ASC;
2023-06-30 17:43:34.848 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 17:43:34 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2023-06-30 17:43:34.854 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 17:43:34 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId LIMIT 0,10;
2023-06-30 17:43:42.324 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:43:42.335 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 17:43:42 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2023-06-30 17:43:42.337 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 17:43:42 | 耗时 1 ms | SQL 语句：
SELECT ROLE_ID,modify_time,create_time,role_name,remark FROM t_role LIMIT 0,10;
2023-06-30 17:48:02.847 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:48:02.857 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:48:02 | 耗时 4 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:48:02.860 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:48:02 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:48:02.862 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:48:02 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:48:02.864 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:48:02 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:48:02.867 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:48:02 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:55:16.997 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:55:17.005 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:55:17 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:55:17.008 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:55:17 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:55:17.010 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:55:17 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:55:17.012 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:55:17 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:55:17.014 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:55:17 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:55:22.248 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:55:22.248 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:55:22.256 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:55:22 | 耗时 3 ms | SQL 语句：
SELECT DEPT_ID,dept_name,modify_time,create_time,order_num,parent_id FROM t_dept ORDER BY order_num ASC;
2023-06-30 17:55:22.264 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 17:55:22 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2023-06-30 17:55:22.268 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 17:55:22 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId LIMIT 0,10;
2023-06-30 17:55:23.876 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:55:23.876 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:55:23.883 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:55:23 | 耗时 2 ms | SQL 语句：
SELECT DEPT_ID,dept_name,modify_time,create_time,order_num,parent_id FROM t_dept ORDER BY order_num ASC;
2023-06-30 17:55:23.892 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:55:23 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2023-06-30 17:55:23.896 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:55:23 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId LIMIT 0,10;
2023-06-30 17:55:40.928 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:55:40.937 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 17:55:40 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2023-06-30 17:55:40.939 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 17:55:40 | 耗时 1 ms | SQL 语句：
SELECT ROLE_ID,modify_time,create_time,role_name,remark FROM t_role LIMIT 0,10;
2023-06-30 17:55:43.258 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:55:43.271 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 17:55:43 | 耗时 3 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 17:55:48.419 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:55:48.431 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 17:55:48 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu WHERE (type = '0');
2023-06-30 17:56:07.769 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:56:07.779 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 17:56:07 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu WHERE (type = '0');
2023-06-30 17:56:20.615 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:56:20.628 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:56:20 | 耗时 3 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu WHERE (type = '0');
2023-06-30 17:56:29.526 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:56:29.535 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:56:29 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu WHERE (type = '0');
2023-06-30 17:57:01.885 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:57:01.896 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 17:57:01 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu WHERE (type = '0');
2023-06-30 17:57:10.603 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:57:10.618 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:57:10 | 耗时 3 ms | SQL 语句：
UPDATE t_menu SET icon='copyright', order_num=1.0, menu_name='CHAT', type='0', parent_id=139, path='/ai/chat', component='/ai/chat/Chat', modify_time='2023-06-30T17:57:10.613+0800', perms='chat:view' WHERE MENU_ID=140;
2023-06-30 17:57:10.621 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:57:10 | 耗时 1 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '140' );
2023-06-30 17:57:10.624 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:57:10 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,description,password,modify_time,email,ssex,mobile,dept_id,avatar,last_login_time,create_time,status,username FROM t_user WHERE USER_ID='13' ;
2023-06-30 17:57:10.627 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:57:10 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy';
2023-06-30 17:57:10.632 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:57:10 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'windqzy' and m.perms is not null and m.perms <> '';
2023-06-30 17:57:10.636 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:57:10 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,description,password,modify_time,email,ssex,mobile,dept_id,avatar,last_login_time,create_time,status,username FROM t_user WHERE USER_ID='1' ;
2023-06-30 17:57:10.639 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:57:10 | 耗时 2 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2023-06-30 17:57:10.646 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:57:10 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2023-06-30 17:57:10.658 febs [http-nio-9527-exec-1] INFO  p6spy - 
2023-06-30 17:57:10.672 febs [asyncTaskExecutor-2] INFO  p6spy - 2023-06-30 17:57:10 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log ( method, create_time, ip, location, time, params, operation, username ) VALUES ( 'cc.mrbird.febs.system.controller.MenuController.updateMenu()', '2023-06-30T17:57:10.666+0800', '127.0.0.1', '', 52, ' menu: "Menu(menuId=140, parentId=139, menuName=CHAT, path=/ai/chat, component=/ai/chat/Chat, perms=chat:view, icon=copyright, type=0, orderNum=1.0, createTime=null, modifyTime=Fri Jun 30 17:57:10 CST 2023, createTimeFrom=null, createTimeTo=null)"', '修改菜单/按钮', 'windqzy' );
2023-06-30 17:57:10.676 febs [asyncTaskExecutor-2] INFO  p6spy - 
2023-06-30 17:57:10.760 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:57:10.767 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:57:10 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 17:57:20.536 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:57:20.544 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:57:20 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 17:57:25.544 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:57:25.569 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:57:25 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_log;
2023-06-30 17:57:25.574 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:57:25 | 耗时 3 ms | SQL 语句：
SELECT ID, method, create_time, ip, location, time, params, operation, username FROM t_log ORDER BY create_time DESC LIMIT 0,10;
2023-06-30 17:57:33.220 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:57:33.221 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:57:33.231 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 17:57:33 | 耗时 1 ms | SQL 语句：
SELECT DEPT_ID,dept_name,modify_time,create_time,order_num,parent_id FROM t_dept ORDER BY order_num ASC;
2023-06-30 17:57:33.235 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:57:33 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2023-06-30 17:57:33.238 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:57:33 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId LIMIT 0,10;
2023-06-30 17:57:36.205 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:57:36.215 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:57:36 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2023-06-30 17:57:36.219 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:57:36 | 耗时 3 ms | SQL 语句：
SELECT ROLE_ID,modify_time,create_time,role_name,remark FROM t_role LIMIT 0,10;
2023-06-30 17:57:40.639 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:57:40.646 febs [http-nio-9527-exec-5] INFO  p6spy - 2023-06-30 17:57:40 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 17:57:44.095 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:57:44.105 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 17:57:44 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu WHERE (type = '0');
2023-06-30 17:58:24.727 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:58:24.738 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 17:58:24 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 17:58:25.931 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:58:25.941 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 17:58:25 | 耗时 3 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 17:58:27.070 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:58:27.078 febs [http-nio-9527-exec-1] INFO  p6spy - 2023-06-30 17:58:27 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 17:58:32.280 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:58:32.287 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:58:32 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:58:32.290 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:58:32 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:58:32.293 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:58:32 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:58:32.296 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:58:32 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:58:32.299 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 17:58:32 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 17:58:43.017 febs [http-nio-9527-exec-9] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-06-30 17:58:48.056 febs [http-nio-9527-exec-10] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-06-30 17:58:48.066 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 17:58:48 | 耗时 3 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-06-30T17:58:48.060+0800' WHERE (username = 'windqzy');
2023-06-30 17:58:48.070 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 17:58:48 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'windqzy' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 17:58:48.079 febs [http-nio-9527-exec-10] INFO  p6spy - 
2023-06-30 17:58:48.092 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 17:58:48 | 耗时 4 ms | SQL 语句：
INSERT INTO t_login_log ( login_time, ip, location, username ) VALUES ( '2023-06-30T17:58:48.084+0800', '127.0.0.1', '', 'windqzy' );
2023-06-30 17:58:48.099 febs [http-nio-9527-exec-10] INFO  p6spy - 
2023-06-30 17:58:48.132 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:58:48.144 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 17:58:48 | 耗时 5 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy') order by m.order_num;
2023-06-30 17:58:48.219 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 17:58:48.224 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:58:48 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 17:58:48.227 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:58:48 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:58:48.229 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:58:48 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 17:58:48.231 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:58:48 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 17:58:48.234 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 17:58:48 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 18:00:08.048 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:00:08.048 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:00:08.059 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 18:00:08 | 耗时 2 ms | SQL 语句：
SELECT DEPT_ID,dept_name,modify_time,create_time,order_num,parent_id FROM t_dept ORDER BY order_num ASC;
2023-06-30 18:00:08.066 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 18:00:08 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2023-06-30 18:00:08.071 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 18:00:08 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId LIMIT 0,10;
2023-06-30 18:00:13.579 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:00:14.395 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:00:14.949 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:00:17.027 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:00:17.031 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:00:17.035 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:00:17.039 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:00:17.041 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:00:17.043 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:00:17.057 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:00:17.057 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:00:17.057 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:00:17.057 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:00:17.057 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:00:17.057 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:00:18.975 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:00:19.000 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 18:00:19 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_job_log;
2023-06-30 18:00:19.004 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 18:00:19 | 耗时 2 ms | SQL 语句：
SELECT LOG_ID, method_name, error, params, job_id, times, create_time, bean_name, status FROM t_job_log ORDER BY create_time DESC LIMIT 0,10;
2023-06-30 18:00:49.360 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:00:49.370 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 18:00:49 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2023-06-30 18:00:49.372 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 18:00:49 | 耗时 2 ms | SQL 语句：
SELECT ROLE_ID,modify_time,create_time,role_name,remark FROM t_role LIMIT 0,10;
2023-06-30 18:00:50.493 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:00:50.501 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 18:00:50 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 18:01:21.540 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:01:21.552 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 18:01:21 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu WHERE (type = '0');
2023-06-30 18:03:50.153 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:03:50.163 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 18:03:50 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_dict;
2023-06-30 18:03:50.165 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 18:03:50 | 耗时 1 ms | SQL 语句：
SELECT DICT_ID,valuee,field_name,keyy,table_name FROM t_dict LIMIT 0,10;
2023-06-30 18:03:53.877 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:03:53.884 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 18:03:53 | 耗时 1 ms | SQL 语句：
SELECT DEPT_ID,dept_name,modify_time,create_time,order_num,parent_id FROM t_dept ORDER BY order_num ASC;
2023-06-30 18:03:55.755 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:03:55.764 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:03:55 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 18:04:00.022 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:04:00.031 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 18:04:00 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2023-06-30 18:04:00.033 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 18:04:00 | 耗时 1 ms | SQL 语句：
SELECT ROLE_ID,modify_time,create_time,role_name,remark FROM t_role LIMIT 0,10;
2023-06-30 18:04:03.307 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:04:03.316 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 18:04:03 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 18:04:03.329 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:04:03.332 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 18:04:03 | 耗时 1 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE (role_id = '1');
2023-06-30 18:04:38.214 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:04:38.224 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 18:04:38 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 18:04:38.248 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:04:38.256 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:04:38 | 耗时 2 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE (role_id = '72');
2023-06-30 18:04:58.623 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:04:58.633 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 18:04:58 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 18:04:58.656 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:04:58.663 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 18:04:58 | 耗时 1 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE (role_id = '1');
2023-06-30 18:05:11.207 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:05:11.218 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 18:05:11 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2023-06-30 18:05:11.220 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 18:05:11 | 耗时 1 ms | SQL 语句：
SELECT ROLE_ID,modify_time,create_time,role_name,remark FROM t_role LIMIT 0,10;
2023-06-30 18:05:15.726 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:05:15.737 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 18:05:15 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 18:06:10.592 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:06:10.603 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:06:10 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu WHERE (type = '0');
2023-06-30 18:06:20.898 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:06:20.909 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 18:06:20 | 耗时 2 ms | SQL 语句：
UPDATE t_menu SET icon='copyright', order_num=1.0, menu_name='CHAT', type='0', parent_id=139, path='/ai/chat', component='/ai/chat/Chat', modify_time='2023-06-30T18:06:20.906+0800', perms='' WHERE MENU_ID=140;
2023-06-30 18:06:20.912 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 18:06:20 | 耗时 1 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '140' );
2023-06-30 18:06:20.914 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 18:06:20 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,description,password,modify_time,email,ssex,mobile,dept_id,avatar,last_login_time,create_time,status,username FROM t_user WHERE USER_ID='13' ;
2023-06-30 18:06:20.917 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 18:06:20 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy';
2023-06-30 18:06:20.923 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 18:06:20 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'windqzy' and m.perms is not null and m.perms <> '';
2023-06-30 18:06:20.928 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 18:06:20 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,description,password,modify_time,email,ssex,mobile,dept_id,avatar,last_login_time,create_time,status,username FROM t_user WHERE USER_ID='1' ;
2023-06-30 18:06:20.931 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 18:06:20 | 耗时 2 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2023-06-30 18:06:20.936 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 18:06:20 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2023-06-30 18:06:20.946 febs [http-nio-9527-exec-8] INFO  p6spy - 
2023-06-30 18:06:20.962 febs [asyncTaskExecutor-3] INFO  p6spy - 2023-06-30 18:06:20 | 耗时 5 ms | SQL 语句：
INSERT INTO t_log ( method, create_time, ip, location, time, params, operation, username ) VALUES ( 'cc.mrbird.febs.system.controller.MenuController.updateMenu()', '2023-06-30T18:06:20.955+0800', '127.0.0.1', '', 47, ' menu: "Menu(menuId=140, parentId=139, menuName=CHAT, path=/ai/chat, component=/ai/chat/Chat, perms=, icon=copyright, type=0, orderNum=1.0, createTime=null, modifyTime=Fri Jun 30 18:06:20 CST 2023, createTimeFrom=null, createTimeTo=null)"', '修改菜单/按钮', 'windqzy' );
2023-06-30 18:06:20.968 febs [asyncTaskExecutor-3] INFO  p6spy - 
2023-06-30 18:06:21.038 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:06:21.045 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 18:06:21 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 18:06:32.768 febs [http-nio-9527-exec-10] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-06-30 18:06:32.778 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 18:06:32 | 耗时 3 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-06-30T18:06:32.773+0800' WHERE (username = 'windqzy');
2023-06-30 18:06:32.782 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 18:06:32 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'windqzy' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 18:06:32.789 febs [http-nio-9527-exec-10] INFO  p6spy - 
2023-06-30 18:06:32.801 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 18:06:32 | 耗时 3 ms | SQL 语句：
INSERT INTO t_login_log ( login_time, ip, location, username ) VALUES ( '2023-06-30T18:06:32.794+0800', '127.0.0.1', '', 'windqzy' );
2023-06-30 18:06:32.806 febs [http-nio-9527-exec-10] INFO  p6spy - 
2023-06-30 18:06:32.828 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:06:32.833 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:06:32 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy') order by m.order_num;
2023-06-30 18:06:32.909 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:06:32.913 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 18:06:32 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 18:06:32.915 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 18:06:32 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 18:06:32.918 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 18:06:32 | 耗时 2 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 18:06:32.921 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 18:06:32 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 18:06:32.923 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 18:06:32 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 18:07:30.399 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:07:30.412 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 18:07:30 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 18:07:32.875 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:07:32.885 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 18:07:32 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu WHERE (type = '0');
2023-06-30 18:07:41.532 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:07:41.541 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 18:07:41 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu WHERE (type = '0');
2023-06-30 18:07:47.642 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:07:47.656 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:07:47 | 耗时 2 ms | SQL 语句：
UPDATE t_menu SET icon='', order_num=1.0, menu_name='用户管理', type='0', parent_id=1, path='/system/user', component='system/user/User', modify_time='2023-06-30T18:07:47.651+0800', perms='user:view' WHERE MENU_ID=3;
2023-06-30 18:07:47.659 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:07:47 | 耗时 2 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '3' );
2023-06-30 18:07:47.662 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:07:47 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,description,password,modify_time,email,ssex,mobile,dept_id,avatar,last_login_time,create_time,status,username FROM t_user WHERE USER_ID='2' ;
2023-06-30 18:07:47.666 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:07:47 | 耗时 2 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2023-06-30 18:07:47.673 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:07:47 | 耗时 3 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2023-06-30 18:07:47.678 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:07:47 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,description,password,modify_time,email,ssex,mobile,dept_id,avatar,last_login_time,create_time,status,username FROM t_user WHERE USER_ID='12' ;
2023-06-30 18:07:47.682 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:07:47 | 耗时 2 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2023-06-30 18:07:47.688 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:07:47 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2023-06-30 18:07:47.693 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:07:47 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,description,password,modify_time,email,ssex,mobile,dept_id,avatar,last_login_time,create_time,status,username FROM t_user WHERE USER_ID='13' ;
2023-06-30 18:07:47.696 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:07:47 | 耗时 2 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy';
2023-06-30 18:07:47.702 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:07:47 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'windqzy' and m.perms is not null and m.perms <> '';
2023-06-30 18:07:47.708 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:07:47 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,description,password,modify_time,email,ssex,mobile,dept_id,avatar,last_login_time,create_time,status,username FROM t_user WHERE USER_ID='1' ;
2023-06-30 18:07:47.711 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:07:47 | 耗时 2 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2023-06-30 18:07:47.717 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:07:47 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2023-06-30 18:07:47.725 febs [http-nio-9527-exec-4] INFO  p6spy - 
2023-06-30 18:07:47.739 febs [asyncTaskExecutor-4] INFO  p6spy - 2023-06-30 18:07:47 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log ( method, create_time, ip, location, time, params, operation, username ) VALUES ( 'cc.mrbird.febs.system.controller.MenuController.updateMenu()', '2023-06-30T18:07:47.731+0800', '127.0.0.1', '', 81, ' menu: "Menu(menuId=3, parentId=1, menuName=用户管理, path=/system/user, component=system/user/User, perms=user:view, icon=, type=0, orderNum=1.0, createTime=null, modifyTime=Fri Jun 30 18:07:47 CST 2023, createTimeFrom=null, createTimeTo=null)"', '修改菜单/按钮', 'windqzy' );
2023-06-30 18:07:47.743 febs [asyncTaskExecutor-4] INFO  p6spy - 
2023-06-30 18:07:47.821 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:07:47.829 febs [http-nio-9527-exec-8] INFO  p6spy - 2023-06-30 18:07:47 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 18:07:53.479 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:07:53.489 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 18:07:53 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu WHERE (type = '0');
2023-06-30 18:08:04.657 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:08:04.681 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 18:08:04 | 耗时 4 ms | SQL 语句：
UPDATE t_menu SET icon='copyright', order_num=1.0, menu_name='CHAT', type='0', parent_id=139, path='/ai/chat', component='ai/chat/Chat', modify_time='2023-06-30T18:08:04.676+0800', perms='' WHERE MENU_ID=140;
2023-06-30 18:08:04.685 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 18:08:04 | 耗时 2 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '140' );
2023-06-30 18:08:04.690 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 18:08:04 | 耗时 3 ms | SQL 语句：
SELECT USER_ID,description,password,modify_time,email,ssex,mobile,dept_id,avatar,last_login_time,create_time,status,username FROM t_user WHERE USER_ID='13' ;
2023-06-30 18:08:04.694 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 18:08:04 | 耗时 2 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy';
2023-06-30 18:08:04.700 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 18:08:04 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'windqzy' and m.perms is not null and m.perms <> '';
2023-06-30 18:08:04.709 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 18:08:04 | 耗时 3 ms | SQL 语句：
SELECT USER_ID,description,password,modify_time,email,ssex,mobile,dept_id,avatar,last_login_time,create_time,status,username FROM t_user WHERE USER_ID='1' ;
2023-06-30 18:08:04.714 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 18:08:04 | 耗时 3 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2023-06-30 18:08:04.724 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 18:08:04 | 耗时 3 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2023-06-30 18:08:04.733 febs [http-nio-9527-exec-9] INFO  p6spy - 
2023-06-30 18:08:04.747 febs [asyncTaskExecutor-5] INFO  p6spy - 2023-06-30 18:08:04 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log ( method, create_time, ip, location, time, params, operation, username ) VALUES ( 'cc.mrbird.febs.system.controller.MenuController.updateMenu()', '2023-06-30T18:08:04.741+0800', '127.0.0.1', '', 67, ' menu: "Menu(menuId=140, parentId=139, menuName=CHAT, path=/ai/chat, component=ai/chat/Chat, perms=, icon=copyright, type=0, orderNum=1.0, createTime=null, modifyTime=Fri Jun 30 18:08:04 CST 2023, createTimeFrom=null, createTimeTo=null)"', '修改菜单/按钮', 'windqzy' );
2023-06-30 18:08:04.751 febs [asyncTaskExecutor-5] INFO  p6spy - 
2023-06-30 18:08:04.832 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:08:04.837 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 18:08:04 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,icon,order_num,menu_name,type,parent_id,path,component,modify_time,create_time,perms FROM t_menu;
2023-06-30 18:08:16.839 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:08:16.847 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:08:16 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 18:08:16.850 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:08:16 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 18:08:16.853 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:08:16 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 18:08:16.855 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:08:16 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 18:08:16.859 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:08:16 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 18:08:28.612 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2023-06-30 18:08:28.626 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 18:08:28 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET last_login_time='2023-06-30T18:08:28.619+0800' WHERE (username = 'windqzy');
2023-06-30 18:08:28.630 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 18:08:28 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'windqzy' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 18:08:28.641 febs [http-nio-9527-exec-6] INFO  p6spy - 
2023-06-30 18:08:28.651 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 18:08:28 | 耗时 3 ms | SQL 语句：
INSERT INTO t_login_log ( login_time, ip, location, username ) VALUES ( '2023-06-30T18:08:28.645+0800', '127.0.0.1', '', 'windqzy' );
2023-06-30 18:08:28.656 febs [http-nio-9527-exec-6] INFO  p6spy - 
2023-06-30 18:08:28.684 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:08:28.695 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 18:08:28 | 耗时 6 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy') order by m.order_num;
2023-06-30 18:08:28.771 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:08:28.777 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 18:08:28 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2023-06-30 18:08:28.780 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 18:08:28 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2023-06-30 18:08:28.783 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 18:08:28 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2023-06-30 18:08:28.787 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 18:08:28 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2023-06-30 18:08:28.790 febs [http-nio-9527-exec-10] INFO  p6spy - 2023-06-30 18:08:28 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'windqzy' group by days;
2023-06-30 18:09:16.956 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-06-30 18:23:45.961 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:24:55.493 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:24:55.493 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:24:55.502 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 18:24:55 | 耗时 2 ms | SQL 语句：
SELECT DEPT_ID,dept_name,modify_time,create_time,order_num,parent_id FROM t_dept ORDER BY order_num ASC;
2023-06-30 18:24:55.510 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 18:24:55 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2023-06-30 18:24:55.515 febs [http-nio-9527-exec-9] INFO  p6spy - 2023-06-30 18:24:55 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId LIMIT 0,10;
2023-06-30 18:51:04.923 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:51:04.923 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:51:04.935 febs [http-nio-9527-exec-7] INFO  p6spy - 2023-06-30 18:51:04 | 耗时 1 ms | SQL 语句：
SELECT DEPT_ID,dept_name,modify_time,create_time,order_num,parent_id FROM t_dept ORDER BY order_num ASC;
2023-06-30 18:51:04.937 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 18:51:04 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2023-06-30 18:51:04.939 febs [http-nio-9527-exec-2] INFO  p6spy - 2023-06-30 18:51:04 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId LIMIT 0,10;
2023-06-30 18:54:30.157 febs [Thread-10] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2023-06-30 18:54:30.157 febs [Thread-10] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2023-06-30 18:54:30.162 febs [Thread-10] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2023-06-30 18:54:30.163 febs [Thread-10] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2023-06-30 18:54:30.163 febs [Thread-10] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2023-06-30 18:54:30.163 febs [Thread-10] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2023-06-30 18:54:30.163 febs [Thread-10] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2023-06-30 18:54:30.165 febs [Thread-10] INFO  c.b.d.d.DynamicRoutingDataSource - dynamic-datasource start closing ....
2023-06-30 18:54:30.166 febs [Thread-10] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2023-06-30 18:54:30.168 febs [Thread-10] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2023-06-30 18:54:30.168 febs [Thread-10] INFO  c.b.d.d.DynamicRoutingDataSource - dynamic-datasource all closed success,bye
2023-06-30 18:54:33.004 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on qinzhiyingdeMacBook-Pro.local with PID 88220 (/Users/windqzy/IdeaProjects/FEBS-Vue/backend/target/classes started by windqzy in /Users/windqzy/IdeaProjects/FEBS-Vue)
2023-06-30 18:54:33.006 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2023-06-30 18:54:33.614 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-30 18:54:33.615 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-30 18:54:33.642 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18ms. Found 0 repository interfaces.
2023-06-30 18:54:33.829 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$8b33101d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:33.913 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.007 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$65825bc1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.013 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.015 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.021 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fbf3eaf0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.032 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$6773ec99] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.096 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$6038a3ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.110 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.112 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.145 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.150 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$4d7b46ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.152 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.159 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$39bc578a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.165 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.166 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.168 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - dynamic-datasource detect P6SPY plugin and enabled it
2023-06-30 18:54:34.173 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2023-06-30 18:54:34.377 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2023-06-30 18:54:34.377 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - dynamic-datasource - load a datasource named [primary] success
2023-06-30 18:54:34.377 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - dynamic-datasource initial loaded [1] datasource,primary datasource named [primary]
2023-06-30 18:54:34.377 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.384 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.390 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.616 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.620 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.623 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.625 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.640 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.641 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy113] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.646 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.646 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.647 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.678 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.696 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.718 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.718 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.720 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.739 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.740 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.756 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.757 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.759 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.776 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.795 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$57876a81] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.798 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$9d42c9a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.799 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$c4eb1289] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.803 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.805 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.809 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$ebb689b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.812 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.813 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$39930810] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.823 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.825 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.827 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.829 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.841 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.851 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.854 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.854 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.861 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:34.874 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:54:35.083 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2023-06-30 18:54:35.091 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2023-06-30 18:54:35.097 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-30 18:54:35.097 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.22]
2023-06-30 18:54:35.155 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-30 18:54:35.155 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2126 ms
2023-06-30 18:54:35.702 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2023-06-30 18:54:35.708 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2023-06-30 18:54:35.708 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.1 created.
2023-06-30 18:54:35.709 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2023-06-30 18:54:35.709 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2023-06-30 18:54:35.709 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2023-06-30 18:54:35.709 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.1
2023-06-30 18:54:35.709 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@33ebe4f0
2023-06-30 18:54:35.764 febs [main] INFO  p6spy - 2023-06-30 18:54:35 | 耗时 2 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2023-06-30 18:54:36.512 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-30 18:54:36.623 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2023-06-30 18:54:36.647 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2023-06-30 18:54:37.418 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2023-06-30 18:54:37.505 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2023-06-30 18:54:37.517 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-30 18:54:37.544 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2023-06-30 18:54:37.631 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_1
2023-06-30 18:54:37.639 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_2
2023-06-30 18:54:37.648 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_3
2023-06-30 18:54:37.653 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_4
2023-06-30 18:54:37.664 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_5
2023-06-30 18:54:37.686 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_6
2023-06-30 18:54:37.695 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_7
2023-06-30 18:54:37.708 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_8
2023-06-30 18:54:37.723 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2023-06-30 18:54:37.723 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2023-06-30 18:54:37.733 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2023-06-30 18:54:37.740 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-06-30 18:54:37.750 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2023-06-30 18:54:37.751 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 5.04 seconds (JVM running for 5.473)
2023-06-30 18:54:37.756 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2023-06-30 18:54:37.758 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2023-06-30 18:54:37.758 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2023-06-30 18:54:37.779 febs [main] INFO  p6spy - 2023-06-30 18:54:37 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,description,password,modify_time,email,ssex,mobile,dept_id,avatar,last_login_time,create_time,status,username FROM t_user;
2023-06-30 18:54:37.786 febs [main] INFO  p6spy - 2023-06-30 18:54:37 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 18:54:37.814 febs [main] INFO  p6spy - 2023-06-30 18:54:37 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2023-06-30 18:54:37.826 febs [main] INFO  p6spy - 2023-06-30 18:54:37 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2023-06-30 18:54:37.841 febs [main] INFO  p6spy - 2023-06-30 18:54:37 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,layout,color,multi_page,fix_siderbar,fix_header,theme FROM t_user_config WHERE USER_ID='1' ;
2023-06-30 18:54:37.847 febs [main] INFO  p6spy - 2023-06-30 18:54:37 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 18:54:37.853 febs [main] INFO  p6spy - 2023-06-30 18:54:37 | 耗时 2 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2023-06-30 18:54:37.858 febs [main] INFO  p6spy - 2023-06-30 18:54:37 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2023-06-30 18:54:37.864 febs [main] INFO  p6spy - 2023-06-30 18:54:37 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,layout,color,multi_page,fix_siderbar,fix_header,theme FROM t_user_config WHERE USER_ID='2' ;
2023-06-30 18:54:37.869 febs [main] INFO  p6spy - 2023-06-30 18:54:37 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 18:54:37.875 febs [main] INFO  p6spy - 2023-06-30 18:54:37 | 耗时 2 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2023-06-30 18:54:37.881 febs [main] INFO  p6spy - 2023-06-30 18:54:37 | 耗时 3 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2023-06-30 18:54:37.885 febs [main] INFO  p6spy - 2023-06-30 18:54:37 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,layout,color,multi_page,fix_siderbar,fix_header,theme FROM t_user_config WHERE USER_ID='12' ;
2023-06-30 18:54:37.889 febs [main] INFO  p6spy - 2023-06-30 18:54:37 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'windqzy' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 18:54:37.894 febs [main] INFO  p6spy - 2023-06-30 18:54:37 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy';
2023-06-30 18:54:37.902 febs [main] INFO  p6spy - 2023-06-30 18:54:37 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'windqzy' and m.perms is not null and m.perms <> '';
2023-06-30 18:54:37.908 febs [main] INFO  p6spy - 2023-06-30 18:54:37 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,layout,color,multi_page,fix_siderbar,fix_header,theme FROM t_user_config WHERE USER_ID='13' ;
2023-06-30 18:54:37.910 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2023-06-30 18:54:37.910 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2023-06-30 18:54:37.910 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2023-06-30 18:54:37.911 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2023-06-30 18:54:37.911 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2023-06-30T18:54:37.911
2023-06-30 18:54:38.103 febs [RMI TCP Connection(2)-192.168.1.123] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-30 18:54:38.103 febs [RMI TCP Connection(2)-192.168.1.123] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-30 18:54:38.106 febs [RMI TCP Connection(3)-192.168.1.123] INFO  p6spy - 2023-06-30 18:54:38 | 耗时 2 ms | SQL 语句：
select 1;
2023-06-30 18:54:38.112 febs [RMI TCP Connection(2)-192.168.1.123] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2023-06-30 18:55:01.425 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:55:01.425 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:55:03.440 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:55:03 | 耗时 1 ms | SQL 语句：
SELECT DEPT_ID,dept_name,modify_time,create_time,order_num,parent_id FROM t_dept ORDER BY order_num ASC;
2023-06-30 18:55:03.466 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 18:55:03 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ) TOTAL;
2023-06-30 18:55:03.474 febs [http-nio-9527-exec-3] INFO  p6spy - 2023-06-30 18:55:03 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME ORDER BY userId LIMIT 0,10;
2023-06-30 18:55:17.203 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:55:17.241 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 18:55:17 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2023-06-30 18:55:17.244 febs [http-nio-9527-exec-6] INFO  p6spy - 2023-06-30 18:55:17 | 耗时 1 ms | SQL 语句：
SELECT ROLE_ID,modify_time,create_time,role_name,remark FROM t_role LIMIT 0,10;
2023-06-30 18:56:37.975 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:57:47.955 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:58:58.823 febs [Thread-12] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2023-06-30 18:58:58.824 febs [Thread-12] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2023-06-30 18:58:58.830 febs [Thread-12] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2023-06-30 18:58:58.831 febs [Thread-12] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2023-06-30 18:58:58.831 febs [Thread-12] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2023-06-30 18:58:58.831 febs [Thread-12] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2023-06-30 18:58:58.831 febs [Thread-12] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2023-06-30 18:58:58.834 febs [Thread-12] INFO  c.b.d.d.DynamicRoutingDataSource - dynamic-datasource start closing ....
2023-06-30 18:58:58.834 febs [Thread-12] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2023-06-30 18:58:58.835 febs [Thread-12] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2023-06-30 18:58:58.835 febs [Thread-12] INFO  c.b.d.d.DynamicRoutingDataSource - dynamic-datasource all closed success,bye
2023-06-30 18:59:01.404 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on qinzhiyingdeMacBook-Pro.local with PID 88806 (/Users/windqzy/IdeaProjects/FEBS-Vue/backend/target/classes started by windqzy in /Users/windqzy/IdeaProjects/FEBS-Vue)
2023-06-30 18:59:01.405 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2023-06-30 18:59:01.944 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-30 18:59:01.946 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-30 18:59:01.969 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17ms. Found 0 repository interfaces.
2023-06-30 18:59:02.142 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$6d45ada7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.210 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.257 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$4794f94b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.263 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.264 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.269 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$de06887a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.278 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$49868a23] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.364 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$424b4177] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.377 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.379 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.409 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.413 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$2f8de489] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.415 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.422 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$1bcef514] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.429 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.429 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.431 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - dynamic-datasource detect P6SPY plugin and enabled it
2023-06-30 18:59:02.434 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2023-06-30 18:59:02.626 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2023-06-30 18:59:02.626 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - dynamic-datasource - load a datasource named [primary] success
2023-06-30 18:59:02.626 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - dynamic-datasource initial loaded [1] datasource,primary datasource named [primary]
2023-06-30 18:59:02.626 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.633 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.638 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.843 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.847 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.849 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.851 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.864 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.865 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy113] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.869 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.870 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.871 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.899 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.917 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.939 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.939 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.941 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.962 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.963 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.979 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.980 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.982 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:02.999 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:03.018 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$399a080b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:03.020 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$ebe6ca24] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:03.022 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$a6fdb013] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:03.025 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:03.027 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:03.030 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$cdc92741] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:03.032 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:03.034 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$1ba5a59a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:03.042 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:03.043 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:03.045 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:03.047 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:03.061 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:03.072 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:03.075 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:03.076 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:03.083 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:03.094 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-30 18:59:03.278 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2023-06-30 18:59:03.286 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2023-06-30 18:59:03.291 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-06-30 18:59:03.291 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.22]
2023-06-30 18:59:03.344 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-06-30 18:59:03.344 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1898 ms
2023-06-30 18:59:03.836 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2023-06-30 18:59:03.843 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2023-06-30 18:59:03.843 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.1 created.
2023-06-30 18:59:03.843 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2023-06-30 18:59:03.843 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2023-06-30 18:59:03.843 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2023-06-30 18:59:03.843 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.1
2023-06-30 18:59:03.843 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@e972ee1
2023-06-30 18:59:03.894 febs [main] INFO  p6spy - 2023-06-30 18:59:03 | 耗时 2 ms | SQL 语句：
select job_id jobId, bean_name beanName, method_name methodName, params, cron_expression cronExpression, status, remark, create_time createTime from t_job order by job_id;
2023-06-30 18:59:04.546 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-30 18:59:04.641 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2023-06-30 18:59:04.662 febs [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2023-06-30 18:59:05.315 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2023-06-30 18:59:05.387 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2023-06-30 18:59:05.397 febs [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-30 18:59:05.421 febs [main] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2023-06-30 18:59:05.500 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_1
2023-06-30 18:59:05.507 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_2
2023-06-30 18:59:05.516 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_3
2023-06-30 18:59:05.521 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_4
2023-06-30 18:59:05.530 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_5
2023-06-30 18:59:05.552 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_6
2023-06-30 18:59:05.560 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_7
2023-06-30 18:59:05.574 febs [main] INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: exportUsingPOST_8
2023-06-30 18:59:05.588 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2023-06-30 18:59:05.588 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2023-06-30 18:59:05.598 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2023-06-30 18:59:05.606 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2023-06-30 18:59:05.613 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2023-06-30 18:59:05.615 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 4.438 seconds (JVM running for 4.74)
2023-06-30 18:59:05.620 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2023-06-30 18:59:05.621 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2023-06-30 18:59:05.621 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2023-06-30 18:59:05.642 febs [main] INFO  p6spy - 2023-06-30 18:59:05 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,description,password,modify_time,email,ssex,mobile,dept_id,avatar,last_login_time,create_time,status,username FROM t_user;
2023-06-30 18:59:05.647 febs [main] INFO  p6spy - 2023-06-30 18:59:05 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 18:59:05.675 febs [main] INFO  p6spy - 2023-06-30 18:59:05 | 耗时 2 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2023-06-30 18:59:05.685 febs [main] INFO  p6spy - 2023-06-30 18:59:05 | 耗时 3 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2023-06-30 18:59:05.698 febs [main] INFO  p6spy - 2023-06-30 18:59:05 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,layout,color,multi_page,fix_siderbar,fix_header,theme FROM t_user_config WHERE USER_ID='1' ;
2023-06-30 18:59:05.704 febs [main] INFO  p6spy - 2023-06-30 18:59:05 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 18:59:05.708 febs [main] INFO  p6spy - 2023-06-30 18:59:05 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2023-06-30 18:59:05.712 febs [main] INFO  p6spy - 2023-06-30 18:59:05 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2023-06-30 18:59:05.717 febs [main] INFO  p6spy - 2023-06-30 18:59:05 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,layout,color,multi_page,fix_siderbar,fix_header,theme FROM t_user_config WHERE USER_ID='2' ;
2023-06-30 18:59:05.721 febs [main] INFO  p6spy - 2023-06-30 18:59:05 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 18:59:05.725 febs [main] INFO  p6spy - 2023-06-30 18:59:05 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2023-06-30 18:59:05.729 febs [main] INFO  p6spy - 2023-06-30 18:59:05 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2023-06-30 18:59:05.733 febs [main] INFO  p6spy - 2023-06-30 18:59:05 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,layout,color,multi_page,fix_siderbar,fix_header,theme FROM t_user_config WHERE USER_ID='12' ;
2023-06-30 18:59:05.737 febs [main] INFO  p6spy - 2023-06-30 18:59:05 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'windqzy' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2023-06-30 18:59:05.742 febs [main] INFO  p6spy - 2023-06-30 18:59:05 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'windqzy';
2023-06-30 18:59:05.746 febs [main] INFO  p6spy - 2023-06-30 18:59:05 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'windqzy' and m.perms is not null and m.perms <> '';
2023-06-30 18:59:05.752 febs [main] INFO  p6spy - 2023-06-30 18:59:05 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,layout,color,multi_page,fix_siderbar,fix_header,theme FROM t_user_config WHERE USER_ID='13' ;
2023-06-30 18:59:05.753 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2023-06-30 18:59:05.753 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2023-06-30 18:59:05.753 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2023-06-30 18:59:05.753 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2023-06-30 18:59:05.754 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2023-06-30T18:59:05.753
2023-06-30 18:59:06.200 febs [RMI TCP Connection(1)-192.168.1.123] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-30 18:59:06.200 febs [RMI TCP Connection(1)-192.168.1.123] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-30 18:59:06.202 febs [RMI TCP Connection(2)-192.168.1.123] INFO  p6spy - 2023-06-30 18:59:06 | 耗时 1 ms | SQL 语句：
select 1;
2023-06-30 18:59:06.209 febs [RMI TCP Connection(1)-192.168.1.123] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2023-06-30 18:59:24.478 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:59:26.501 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2023-06-30 18:59:26.555 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:59:26 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_log;
2023-06-30 18:59:26.560 febs [http-nio-9527-exec-4] INFO  p6spy - 2023-06-30 18:59:26 | 耗时 2 ms | SQL 语句：
SELECT ID, method, create_time, ip, location, time, params, operation, username FROM t_log ORDER BY create_time DESC LIMIT 0,10;
2023-06-30 18:59:40.121 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
